<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <template id="cpa_college_home" name="CPA College Homepage" inherit_id="website.homepage">
        <xpath expr="//div[@id='wrap']" position="replace">
            <div id="wrap" class="oe_structure">
                 <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"/>
              <script src="https://unpkg.com/gsap@3/dist/Draggable.min.js"/>
       <script src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/InertiaPlugin.min.js"/>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollToPlugin.min.js"/>
      <script src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/ScrollTrigger.min.js?v=3.3.0"/>
       <script src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/gsap-latest-beta.min.js?r=5426"/>
      <script src="https://codepen.io/GreenSock/pen/7ba936b34824fefdccfe2c6d9f0b740b.js"/>
                <section class="cpa-banner oe_img_bg o_bg_img_center o_colored_level" style="background-image: url(&quot;/cpa/static/img/herosection.svg&quot;);">
                    <img src="/cpa/static/img/rounded.svg" class="rounded" loading="lazy" style="translate: none; rotate: none; scale: none; transform-origin: 50% 50%; transform: translate3d(0px, 0px, 0px) rotate(10.3286deg);"/>
                    <img src="/cpa/static/img/student.png" class="student " loading="lazy" style=""/>
                    <img src="/cpa/static/img/collection.png" class="collection " loading="lazy" style=""/>
                    <div class="landing_page-content" id="home-page-content">
                        <div class="col-md-6">
                            <div class="content-box">
                                <div class="landing-page-title " title="CPA cOLLEGE OF GLOBAL STUDEIS" style="margin:0;">
                                    <h1 class="landing-page-head " id="home-page-head" style="margin: 0;">CPA COLLEGE OF
                                        <br/>
                                        GLOBAL STUDEIS
                                    </h1>

                                    <p class="landing-landing-para ">Affiliated to University of Calicut,
                                        Recognized By Govt. of Kerala
                                        <br/>
                                        and Run by - Nice Educational
                                        Trust
                                    </p>
                                    <div class="landing_page_btn ">
                                        <a href="/programmes-offered" class="landing-page-btn ">
                                            <span class="btn-title">Admission 2025</span>
                                            <span class="icon-arrow">
                                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="17" height="17" viewbox="0 0 66 43" version="1.1">
                                                    <g id="arrow" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                        <path id="arrow-icon-one" d="M40.1543933,3.89485454 L43.9763149,0.139296592 C44.1708311,-0.0518420739 44.4826329,-0.0518571125 44.6771675,0.139262789 L65.6916134,20.7848311 C66.0855801,21.1718824 66.0911863,21.8050225 65.704135,22.1989893 C65.7000188,22.2031791 65.6958657,22.2073326 65.6916762,22.2114492 L44.677098,42.8607841 C44.4825957,43.0519059 44.1708242,43.0519358 43.9762853,42.8608513 L40.1545186,39.1069479 C39.9575152,38.9134427 39.9546793,38.5968729 40.1481845,38.3998695 C40.1502893,38.3977268 40.1524132,38.395603 40.1545562,38.3934985 L56.9937789,21.8567812 C57.1908028,21.6632968 57.193672,21.3467273 57.0001876,21.1497035 C56.9980647,21.1475418 56.9959223,21.1453995 56.9937605,21.1432767 L40.1545208,4.60825197 C39.9574869,4.41477773 39.9546013,4.09820839 40.1480756,3.90117456 C40.1501626,3.89904911 40.1522686,3.89694235 40.1543933,3.89485454 Z" fill="#000"/>
                                                        <path id="arrow-icon-two" d="M20.1543933,3.89485454 L23.9763149,0.139296592 C24.1708311,-0.0518420739 24.4826329,-0.0518571125 24.6771675,0.139262789 L45.6916134,20.7848311 C46.0855801,21.1718824 46.0911863,21.8050225 45.704135,22.1989893 C45.7000188,22.2031791 45.6958657,22.2073326 45.6916762,22.2114492 L24.677098,42.8607841 C24.4825957,43.0519059 24.1708242,43.0519358 23.9762853,42.8608513 L20.1545186,39.1069479 C19.9575152,38.9134427 19.9546793,38.5968729 20.1481845,38.3998695 C20.1502893,38.3977268 20.1524132,38.395603 20.1545562,38.3934985 L36.9937789,21.8567812 C37.1908028,21.6632968 37.193672,21.3467273 37.0001876,21.1497035 C36.9980647,21.1475418 36.9959223,21.1453995 36.9937605,21.1432767 L20.1545208,4.60825197 C19.9574869,4.41477773 19.9546013,4.09820839 20.1480756,3.90117456 C20.1501626,3.89904911 20.1522686,3.89694235 20.1543933,3.89485454 Z" fill="#000"/>
                                                        <path id="arrow-icon-three" d="M0.154393339,3.89485454 L3.97631488,0.139296592 C4.17083111,-0.0518420739 4.48263286,-0.0518571125 4.67716753,0.139262789 L25.6916134,20.7848311 C26.0855801,21.1718824 26.0911863,21.8050225 25.704135,22.1989893 C25.7000188,22.2031791 25.6958657,22.2073326 25.6916762,22.2114492 L4.67709797,42.8607841 C4.48259567,43.0519059 4.17082418,43.0519358 3.97628526,42.8608513 L0.154518591,39.1069479 C-0.0424848215,38.9134427 -0.0453206733,38.5968729 0.148184538,38.3998695 C0.150289256,38.3977268 0.152413239,38.395603 0.154556228,38.3934985 L16.9937789,21.8567812 C17.1908028,21.6632968 17.193672,21.3467273 17.0001876,21.1497035 C16.9980647,21.1475418 16.9959223,21.1453995 16.9937605,21.1432767 L0.15452076,4.60825197 C-0.0425130651,4.41477773 -0.0453986756,4.09820839 0.148075568,3.90117456 C0.150162624,3.89904911 0.152268631,3.89694235 0.154393339,3.89485454 Z" fill="#000"/>
                                                    </g>
                                                </svg>
                                            </span>
                                        </a>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </section>

                 <div class="bottombar" style="">
                <section class=" announcement-section o_colored_level" data-original-title="" title="" aria-describedby="tooltip896014" style="background-image: none;">
                    <div id="" class="announcement-head">
                        Latest News
                    </div>

                    <div class="announcement-text">
                    <div class="announcement-items latest_newses " data-original-title="" title="" aria-describedby="tooltip920002">
                        <t t-foreach="request.env['news.announcement'].sudo().search([],)" t-as="news">
                            <section id="announce-item" style="background-image: none;" class="o_colored_level announce-item">
                              <svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 7 7" fill="none">
  <circle cx="3.5" cy="3.5" r="3.5" fill="#FBCC36"/>
</svg>
<a t-att-href="news.url" target="_blank">
                                    <t t-esc="news.title"/>
                                </a>
                            </section>
                        </t>
                    </div>
                    </div>
                </section>
            </div>
                <section class="awards-section pt100 pb100 o_colored_level" style="background-image: none;">
                    <img src="/cpa/static/img/vector1.svg" class="vector1" id="vector1" loading="lazy" style=""/>
                     <img src="/cpa/static/img/vector3.svg" class="vector2" id="about-vector" loading="lazy" style=""/>
                    <div class="container-div">

                        <div class="row-sec">
                            <div class="section2-div">
                                <div class="image-blocks">
                                    <img src="/cpa/static/img/about1.png" class="about1 " loading="lazy" style=""/>
                                    <div class="about-items">
                                        <img src="/cpa/static/img/college.webp" class="about2 " loading="lazy" style="     object-fit: cover;     object-position: top center; "/>
                                        <img src="/web/image/926-462e5e45/1590733185phpmNIZ6C.jpeg" alt="" class="about3 inview img img-fluid o_we_custom_image" data-original-id="925" data-original-src="/web/image/925-4d4c919b/1590733185phpmNIZ6C.jpeg" data-mimetype="image/jpeg" data-resize-width="1400" data-bs-original-title="" title="" aria-describedby="tooltip319641" data-quality="100" style="&#10;    object-fit: cover;&#10;    object-position: center top;&#10;"/>
                                    </div>
                                </div>
                            </div>

                            <div class="section2-div">
                                <div class="about-sec-detail ">
                                    <div class="award-remark-moment">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="39" height="49" viewbox="0 0 39 49" fill="none">
                                            <path d="M19.4757 1.02316L2.63015 2.92333C1.70171 3.02806 1 3.81337 1 4.7477V31.3892C1 31.6492 1.05339 31.9059 1.16592 32.1402C4.6513 39.3985 14.0732 45.3048 19.007 47.684C19.4394 47.8925 19.9369 47.9094 20.3849 47.7368C31.1157 43.603 36.6964 35.8398 38.3184 32.1071C38.411 31.8939 38.4531 31.6642 38.4531 31.4318V4.74859C38.4531 3.81388 37.7509 3.02838 36.822 2.92411L19.8863 1.02305C19.7499 1.00773 19.6121 1.00777 19.4757 1.02316Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M10 11.25C9.80109 11.25 9.61032 11.329 9.46967 11.4697C9.32902 11.6103 9.25 11.8011 9.25 12C9.25 12.1989 9.32902 12.3897 9.46967 12.5303C9.61032 12.671 9.80109 12.75 10 12.75V29.25H9.25C9.05109 29.25 8.86032 29.329 8.71967 29.4697C8.57902 29.6103 8.5 29.8011 8.5 30C8.5 30.1989 8.57902 30.3897 8.71967 30.5303C8.86032 30.671 9.05109 30.75 9.25 30.75H22V12.75C22.1989 12.75 22.3897 12.671 22.5303 12.5303C22.671 12.3897 22.75 12.1989 22.75 12C22.75 11.8011 22.671 11.6103 22.5303 11.4697C22.3897 11.329 22.1989 11.25 22 11.25H10ZM13.75 28.5V26.25C13.75 26.0511 13.829 25.8603 13.9697 25.7197C14.1103 25.579 14.3011 25.5 14.5 25.5H17.5C17.6989 25.5 17.8897 25.579 18.0303 25.7197C18.171 25.8603 18.25 26.0511 18.25 26.25V28.5C18.25 28.6989 18.171 28.8897 18.0303 29.0303C17.8897 29.171 17.6989 29.25 17.5 29.25H14.5C14.3011 29.25 14.1103 29.171 13.9697 29.0303C13.829 28.8897 13.75 28.6989 13.75 28.5ZM13 15.75C13 15.5511 13.079 15.3603 13.2197 15.2197C13.3603 15.079 13.5511 15 13.75 15H14.5C14.6989 15 14.8897 15.079 15.0303 15.2197C15.171 15.3603 15.25 15.5511 15.25 15.75C15.25 15.9489 15.171 16.1397 15.0303 16.2803C14.8897 16.421 14.6989 16.5 14.5 16.5H13.75C13.5511 16.5 13.3603 16.421 13.2197 16.2803C13.079 16.1397 13 15.9489 13 15.75ZM13.75 18C13.5511 18 13.3603 18.079 13.2197 18.2197C13.079 18.3603 13 18.5511 13 18.75C13 18.9489 13.079 19.1397 13.2197 19.2803C13.3603 19.421 13.5511 19.5 13.75 19.5H14.5C14.6989 19.5 14.8897 19.421 15.0303 19.2803C15.171 19.1397 15.25 18.9489 15.25 18.75C15.25 18.5511 15.171 18.3603 15.0303 18.2197C14.8897 18.079 14.6989 18 14.5 18H13.75ZM13 21.75C13 21.5511 13.079 21.3603 13.2197 21.2197C13.3603 21.079 13.5511 21 13.75 21H14.5C14.6989 21 14.8897 21.079 15.0303 21.2197C15.171 21.3603 15.25 21.5511 15.25 21.75C15.25 21.9489 15.171 22.1397 15.0303 22.2803C14.8897 22.421 14.6989 22.5 14.5 22.5H13.75C13.5511 22.5 13.3603 22.421 13.2197 22.2803C13.079 22.1397 13 21.9489 13 21.75ZM17.5 15C17.3011 15 17.1103 15.079 16.9697 15.2197C16.829 15.3603 16.75 15.5511 16.75 15.75C16.75 15.9489 16.829 16.1397 16.9697 16.2803C17.1103 16.421 17.3011 16.5 17.5 16.5H18.25C18.4489 16.5 18.6397 16.421 18.7803 16.2803C18.921 16.1397 19 15.9489 19 15.75C19 15.5511 18.921 15.3603 18.7803 15.2197C18.6397 15.079 18.4489 15 18.25 15H17.5ZM16.75 18.75C16.75 18.5511 16.829 18.3603 16.9697 18.2197C17.1103 18.079 17.3011 18 17.5 18H18.25C18.4489 18 18.6397 18.079 18.7803 18.2197C18.921 18.3603 19 18.5511 19 18.75C19 18.9489 18.921 19.1397 18.7803 19.2803C18.6397 19.421 18.4489 19.5 18.25 19.5H17.5C17.3011 19.5 17.1103 19.421 16.9697 19.2803C16.829 19.1397 16.75 18.9489 16.75 18.75ZM17.5 21C17.3011 21 17.1103 21.079 16.9697 21.2197C16.829 21.3603 16.75 21.5511 16.75 21.75C16.75 21.9489 16.829 22.1397 16.9697 22.2803C17.1103 22.421 17.3011 22.5 17.5 22.5H18.25C18.4489 22.5 18.6397 22.421 18.7803 22.2803C18.921 22.1397 19 21.9489 19 21.75C19 21.5511 18.921 21.3603 18.7803 21.2197C18.6397 21.079 18.4489 21 18.25 21H17.5ZM23.5 15.75V30.75H28.75C28.9489 30.75 29.1397 30.671 29.2803 30.5303C29.421 30.3897 29.5 30.1989 29.5 30C29.5 29.8011 29.421 29.6103 29.2803 29.4697C29.1397 29.329 28.9489 29.25 28.75 29.25H28V17.25C28.1989 17.25 28.3897 17.171 28.5303 17.0303C28.671 16.8897 28.75 16.6989 28.75 16.5C28.75 16.3011 28.671 16.1103 28.5303 15.9697C28.3897 15.829 28.1989 15.75 28 15.75H23.5ZM25 20.25C25 20.0511 25.079 19.8603 25.2197 19.7197C25.3603 19.579 25.5511 19.5 25.75 19.5H25.758C25.9569 19.5 26.1477 19.579 26.2883 19.7197C26.429 19.8603 26.508 20.0511 26.508 20.25V20.258C26.508 20.4569 26.429 20.6477 26.2883 20.7883C26.1477 20.929 25.9569 21.008 25.758 21.008H25.75C25.5511 21.008 25.3603 20.929 25.2197 20.7883C25.079 20.6477 25 20.4569 25 20.258V20.25ZM25.75 22.5C25.5511 22.5 25.3603 22.579 25.2197 22.7197C25.079 22.8603 25 23.0511 25 23.25V23.258C25 23.672 25.336 24.008 25.75 24.008H25.758C25.9569 24.008 26.1477 23.929 26.2883 23.7883C26.429 23.6477 26.508 23.4569 26.508 23.258V23.25C26.508 23.0511 26.429 22.8603 26.2883 22.7197C26.1477 22.579 25.9569 22.5 25.758 22.5H25.75ZM25 26.25C25 26.0511 25.079 25.8603 25.2197 25.7197C25.3603 25.579 25.5511 25.5 25.75 25.5H25.758C25.9569 25.5 26.1477 25.579 26.2883 25.7197C26.429 25.8603 26.508 26.0511 26.508 26.25V26.258C26.508 26.4569 26.429 26.6477 26.2883 26.7883C26.1477 26.929 25.9569 27.008 25.758 27.008H25.75C25.5511 27.008 25.3603 26.929 25.2197 26.7883C25.079 26.6477 25 26.4569 25 26.258V26.25Z" fill="#5CD1FF"/>
                                        </svg>

                                        <div class="remark-moment">About the college
                                        </div>
                                    </div>
                                    <h2 class="award-head mb-0" id="homeabout-head">
                                        Welcome to CPA College
                                    </h2>
                                    <div class="award-description" id="homeabout-description">CPA College of Global
                                        Studies, Puthanathani was established in 2012 as a self-financing College
                                        affiliated to the University of Calicut and Managed under the aegis of Nice
                                        Educational Trust (regd.) a high-profile organization of the area. The College
                                        is providing healthy and congenial atmosphere for the all round development of
                                        the students.
                                    </div>
                                    <a href="/our-history" class="home-btn view-all mt32">
                                        About
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewbox="0 0 24 25" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2.47913C6.615 2.47913 2.25 6.84413 2.25 12.2291C2.25 17.6141 6.615 21.9791 12 21.9791C17.385 21.9791 21.75 17.6141 21.75 12.2291C21.75 6.84413 17.385 2.47913 12 2.47913ZM16.28 12.7591C16.4205 12.6185 16.4993 12.4279 16.4993 12.2291C16.4993 12.0304 16.4205 11.8398 16.28 11.6991L13.28 8.69913C13.2113 8.62544 13.1285 8.56634 13.0365 8.52534C12.9445 8.48435 12.8452 8.46231 12.7445 8.46053C12.6438 8.45876 12.5438 8.47728 12.4504 8.515C12.357 8.55272 12.2722 8.60887 12.201 8.68009C12.1297 8.75131 12.0736 8.83614 12.0359 8.92953C11.9982 9.02292 11.9796 9.12295 11.9814 9.22365C11.9832 9.32435 12.0052 9.42366 12.0462 9.51566C12.0872 9.60766 12.1463 9.69046 12.22 9.75913L13.94 11.4791H8.25C8.05109 11.4791 7.86032 11.5581 7.71967 11.6988C7.57902 11.8394 7.5 12.0302 7.5 12.2291C7.5 12.428 7.57902 12.6188 7.71967 12.7595C7.86032 12.9001 8.05109 12.9791 8.25 12.9791H13.94L12.22 14.6991C12.1463 14.7678 12.0872 14.8506 12.0462 14.9426C12.0052 15.0346 11.9832 15.1339 11.9814 15.2346C11.9796 15.3353 11.9982 15.4353 12.0359 15.5287C12.0736 15.6221 12.1297 15.7069 12.201 15.7782C12.2722 15.8494 12.357 15.9055 12.4504 15.9432C12.5438 15.981 12.6438 15.9995 12.7445 15.9977C12.8452 15.9959 12.9445 15.9739 13.0365 15.9329C13.1285 15.8919 13.2113 15.8328 13.28 15.7591L16.28 12.7591Z" fill="white"/>
                                        </svg>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <section class="video-section">
                    <img src="/cpa/static/img/college-banner.png" loading="lazy" style=""/>
                    <div class="over-background"/>
                    <a href="https://cybozom.in/public/360/CPA/" target="_blank" class="play-btn">
                        <div class="play_btn">
                            <svg xmlns="http://www.w3.org/2000/svg" width="112" height="112" viewbox="0 0 111 111" fill="none">

                                <path d="M72 55L48 68.8564V41.1436L72 55Z" fill="white"/>
                            </svg>
                        </div>
                    </a>
                    <div class="video-content ">
                        <div class="award-remark-moment">
                            <svg xmlns="http://www.w3.org/2000/svg" width="39" height="48" viewbox="0 0 39 48" fill="none">
                                <path d="M19.4757 0.523156L2.63015 2.42333C1.70171 2.52806 1 3.31337 1 4.2477V30.8892C1 31.1492 1.05339 31.4059 1.16592 31.6402C4.6513 38.8985 14.0732 44.8048 19.007 47.184C19.4394 47.3925 19.9369 47.4094 20.3849 47.2368C31.1157 43.103 36.6964 35.3398 38.3184 31.6071C38.411 31.3939 38.4531 31.1642 38.4531 30.9318V4.24859C38.4531 3.31388 37.7509 2.52838 36.822 2.42411L19.8863 0.523046C19.7499 0.50773 19.6121 0.507767 19.4757 0.523156Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M11.125 11.5C10.089 11.5 9.25 12.34 9.25 13.375V26.5C9.25 27.2956 9.56607 28.0587 10.1287 28.6213C10.6913 29.1839 11.4544 29.5 12.25 29.5H27.25C26.4544 29.5 25.6913 29.1839 25.1287 28.6213C24.5661 28.0587 24.25 27.2956 24.25 26.5V13.375C24.25 12.339 23.41 11.5 22.375 11.5H11.125ZM19 18.25C18.8011 18.25 18.6103 18.329 18.4697 18.4697C18.329 18.6103 18.25 18.8011 18.25 19C18.25 19.1989 18.329 19.3897 18.4697 19.5303C18.6103 19.671 18.8011 19.75 19 19.75H20.5C20.6989 19.75 20.8897 19.671 21.0303 19.5303C21.171 19.3897 21.25 19.1989 21.25 19C21.25 18.8011 21.171 18.6103 21.0303 18.4697C20.8897 18.329 20.6989 18.25 20.5 18.25H19ZM18.25 16C18.25 15.8011 18.329 15.6103 18.4697 15.4697C18.6103 15.329 18.8011 15.25 19 15.25H20.5C20.6989 15.25 20.8897 15.329 21.0303 15.4697C21.171 15.6103 21.25 15.8011 21.25 16C21.25 16.1989 21.171 16.3897 21.0303 16.5303C20.8897 16.671 20.6989 16.75 20.5 16.75H19C18.8011 16.75 18.6103 16.671 18.4697 16.5303C18.329 16.3897 18.25 16.1989 18.25 16ZM13 21.25C12.8011 21.25 12.6103 21.329 12.4697 21.4697C12.329 21.6103 12.25 21.8011 12.25 22C12.25 22.1989 12.329 22.3897 12.4697 22.5303C12.6103 22.671 12.8011 22.75 13 22.75H20.5C20.6989 22.75 20.8897 22.671 21.0303 22.5303C21.171 22.3897 21.25 22.1989 21.25 22C21.25 21.8011 21.171 21.6103 21.0303 21.4697C20.8897 21.329 20.6989 21.25 20.5 21.25H13ZM12.25 25C12.25 24.8011 12.329 24.6103 12.4697 24.4697C12.6103 24.329 12.8011 24.25 13 24.25H20.5C20.6989 24.25 20.8897 24.329 21.0303 24.4697C21.171 24.6103 21.25 24.8011 21.25 25C21.25 25.1989 21.171 25.3897 21.0303 25.5303C20.8897 25.671 20.6989 25.75 20.5 25.75H13C12.8011 25.75 12.6103 25.671 12.4697 25.5303C12.329 25.3897 12.25 25.1989 12.25 25ZM13 15.25C12.8011 15.25 12.6103 15.329 12.4697 15.4697C12.329 15.6103 12.25 15.8011 12.25 16V19C12.25 19.414 12.586 19.75 13 19.75H16C16.1989 19.75 16.3897 19.671 16.5303 19.5303C16.671 19.3897 16.75 19.1989 16.75 19V16C16.75 15.8011 16.671 15.6103 16.5303 15.4697C16.3897 15.329 16.1989 15.25 16 15.25H13Z" fill="#5CD1FF"/>
                                <path d="M25.75 15.25H27.625C28.246 15.25 28.75 15.754 28.75 16.375V26.5C28.75 26.8978 28.592 27.2794 28.3107 27.5607C28.0294 27.842 27.6478 28 27.25 28C26.8522 28 26.4706 27.842 26.1893 27.5607C25.908 27.2794 25.75 26.8978 25.75 26.5V15.25Z" fill="#5CD1FF"/>
                            </svg>


                            <div class="remark-moment" id="in_black">Virtual tour
                            </div>
                        </div>
                        <h2 class="award-head in_black mb-0" id="video-head">
                            Explore our campus
                        </h2>
                        <div class="award-description in_black" id="video-description">It’s about shaping a perspective,
                            fostering critical thinking, and preparing for a life time of learning and growth.
                        </div>


                    </div>
                </section>
                <section class="our-programmes pt100 ">
                    <img src="/cpa/static/img/vector-home.svg" class="vector2" id="vector5" loading="lazy" style=""/>
                    <div class="container-div">
                        <div class="programme ">

                            <div class="award-remark-moment">
                                <svg xmlns="http://www.w3.org/2000/svg" width="39" height="49" viewbox="0 0 39 49" fill="none">
                                    <path d="M19.4757 1.02316L2.63015 2.92333C1.70171 3.02806 1 3.81337 1 4.7477V31.3892C1 31.6492 1.05339 31.9059 1.16592 32.1402C4.6513 39.3985 14.0732 45.3048 19.007 47.684C19.4394 47.8925 19.9369 47.9094 20.3849 47.7368C31.1157 43.603 36.6964 35.8398 38.3184 32.1071C38.411 31.8939 38.4531 31.6642 38.4531 31.4318V4.74859C38.4531 3.81388 37.7509 3.02838 36.822 2.92411L19.8863 1.02305C19.7499 1.00773 19.6121 1.00777 19.4757 1.02316Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
                                    <path d="M18.25 13.533C16.6831 12.5294 14.8608 11.9973 13 12C11.893 11.9989 10.7939 12.1866 9.75 12.555C9.60379 12.6067 9.4772 12.7024 9.38766 12.8291C9.29812 12.9557 9.25002 13.1069 9.25 13.262V27.512C9.25002 27.632 9.27882 27.7502 9.33398 27.8567C9.38915 27.9633 9.46907 28.055 9.56703 28.1243C9.665 28.1936 9.77815 28.2383 9.89699 28.2548C10.0158 28.2713 10.1369 28.259 10.25 28.219C11.1333 27.9075 12.0633 27.7488 13 27.75C14.995 27.75 16.823 28.457 18.25 29.636V13.533ZM19.75 29.636C21.2264 28.4141 23.0836 27.747 25 27.75C25.966 27.75 26.89 27.916 27.75 28.22C27.8632 28.26 27.9843 28.2723 28.1033 28.2558C28.2222 28.2392 28.3354 28.1944 28.4334 28.125C28.5314 28.0556 28.6113 27.9638 28.6664 27.8571C28.7215 27.7504 28.7501 27.6321 28.75 27.512V13.262C28.75 13.1069 28.7019 12.9557 28.6123 12.8291C28.5228 12.7024 28.3962 12.6067 28.25 12.555C27.2061 12.1866 26.107 11.9989 25 12C23.1392 11.9973 21.3169 12.5294 19.75 13.533V29.636Z" fill="#5CD1FF"/>
                                </svg>

                                <div class="remark-moment">Our programs
                                </div>
                            </div>
                            <div class="programme_head pt12">
                                <div class="award-head" style="width:auto">
                                    Programmes with add-on courses
                                </div>

                                <a href="/programmes" class="home-btn view-all mt0">
                                    View all courses
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewbox="0 0 24 25" fill="none">
                                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2.47913C6.615 2.47913 2.25 6.84413 2.25 12.2291C2.25 17.6141 6.615 21.9791 12 21.9791C17.385 21.9791 21.75 17.6141 21.75 12.2291C21.75 6.84413 17.385 2.47913 12 2.47913ZM16.28 12.7591C16.4205 12.6185 16.4993 12.4279 16.4993 12.2291C16.4993 12.0304 16.4205 11.8398 16.28 11.6991L13.28 8.69913C13.2113 8.62544 13.1285 8.56634 13.0365 8.52534C12.9445 8.48435 12.8452 8.46231 12.7445 8.46053C12.6438 8.45876 12.5438 8.47728 12.4504 8.515C12.357 8.55272 12.2722 8.60887 12.201 8.68009C12.1297 8.75131 12.0736 8.83614 12.0359 8.92953C11.9982 9.02292 11.9796 9.12295 11.9814 9.22365C11.9832 9.32435 12.0052 9.42366 12.0462 9.51566C12.0872 9.60766 12.1463 9.69046 12.22 9.75913L13.94 11.4791H8.25C8.05109 11.4791 7.86032 11.5581 7.71967 11.6988C7.57902 11.8394 7.5 12.0302 7.5 12.2291C7.5 12.428 7.57902 12.6188 7.71967 12.7595C7.86032 12.9001 8.05109 12.9791 8.25 12.9791H13.94L12.22 14.6991C12.1463 14.7678 12.0872 14.8506 12.0462 14.9426C12.0052 15.0346 11.9832 15.1339 11.9814 15.2346C11.9796 15.3353 11.9982 15.4353 12.0359 15.5287C12.0736 15.6221 12.1297 15.7069 12.201 15.7782C12.2722 15.8494 12.357 15.9055 12.4504 15.9432C12.5438 15.981 12.6438 15.9995 12.7445 15.9977C12.8452 15.9959 12.9445 15.9739 13.0365 15.9329C13.1285 15.8919 13.2113 15.8328 13.28 15.7591L16.28 12.7591Z" fill="white"/>
                                    </svg>
                                </a>
                            </div>
                        </div>
                         <section style="overflow:hidden;">
<div class="containers">
   <t t-foreach="request.env['website.department'].sudo().search([])" t-as="department">
      <t t-foreach="department.programme_ids" t-as="prog">
        <section class="panel programme-item">
          <div class="programme-name">
            <t t-esc="prog.programme_name"/>
          </div>
          <t t-if="prog.programme_points">
            <div class="programme-sub">
              <t t-esc="prog.programme_points"/>
            </div>
          </t>
          <a t-att-href="'/programme-detail/' + str(prog.department_id.dep_id) + '/' + str(prog.programme_id)" class="programme-link">
            Course details
          </a>
        </section>
      </t>
    </t>
</div>
</section>



<style>
    html {
	overflow-y: scroll;
	height: 100%;
	-webkit-overflow-scrolling: touch;
	overflow-scrolling: touch;
}
body {
	overflow-y: visible;
	position: relative;
  height: unset;
}
.containers {
height:380px;
	display: flex;
	flex-wrap: nowrap;
  overflow-x:scroll;
  gap:23px;
    padding: 60px 0 !important;
    transform: translate(0px, 0) !important;

}
.programme-item {
width:340px;
min-width:340px;
    justify-content: space-between;
    height:300px;
}
.containers::-webkit-scrollbar {
  display: none;
}
</style>
                        <!--<div class="programmes inview">-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_781" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-2" y="3" width="33" height="33">-->
                        <!--                <rect x="-1.30127" y="3.66626" width="32" height="32" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_781)">-->
                        <!--                <path d="M16.3991 26.9996H19.5991V26.8996L14.0991 21.0663L14.1324 20.9663H14.4657C15.6657 20.9663 16.6602 20.5996 17.4491 19.8663C18.2379 19.1329 18.7213 18.2774 18.8991 17.2996H20.2324V15.7329H18.8657C18.7991 15.3996 18.6824 15.0829 18.5157 14.7829C18.3491 14.4829 18.1435 14.1885 17.8991 13.8996H20.2324V12.3329H9.16572V14.2329H14.3657C14.9435 14.2329 15.4157 14.3774 15.7824 14.6663C16.1491 14.9552 16.3991 15.3107 16.5324 15.7329H9.16572V17.2996H16.5657C16.4324 17.7441 16.1768 18.1274 15.7991 18.4496C15.4213 18.7718 14.9102 18.9329 14.2657 18.9329H10.9324V21.0663L16.3991 26.9996ZM14.6991 32.9996C12.8546 32.9996 11.1213 32.6496 9.49906 31.9496C7.87683 31.2496 6.46572 30.2996 5.26572 29.0996C4.06572 27.8996 3.11572 26.4885 2.41572 24.8663C1.71572 23.2441 1.36572 21.5107 1.36572 19.6663C1.36572 17.8218 1.71572 16.0885 2.41572 14.4663C3.11572 12.8441 4.06572 11.4329 5.26572 10.2329C6.46572 9.03295 7.87683 8.08295 9.49906 7.38295C11.1213 6.68295 12.8546 6.33295 14.6991 6.33295C16.5435 6.33295 18.2768 6.68295 19.8991 7.38295C21.5213 8.08295 22.9324 9.03295 24.1324 10.2329C25.3324 11.4329 26.2824 12.8441 26.9824 14.4663C27.6824 16.0885 28.0324 17.8218 28.0324 19.6663C28.0324 21.5107 27.6824 23.2441 26.9824 24.8663C26.2824 26.4885 25.3324 27.8996 24.1324 29.0996C22.9324 30.2996 21.5213 31.2496 19.8991 31.9496C18.2768 32.6496 16.5435 32.9996 14.6991 32.9996ZM14.6991 30.3329C17.6768 30.3329 20.1991 29.2996 22.2657 27.2329C24.3324 25.1663 25.3657 22.6441 25.3657 19.6663C25.3657 16.6885 24.3324 14.1663 22.2657 12.0996C20.1991 10.0329 17.6768 8.99961 14.6991 8.99961C11.7213 8.99961 9.19906 10.0329 7.13239 12.0996C5.06572 14.1663 4.03239 16.6885 4.03239 19.6663C4.03239 22.6441 5.06572 25.1663 7.13239 27.2329C9.19906 29.2996 11.7213 30.3329 14.6991 30.3329Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            BCom.-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            (Finance) with CMA (US)-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_781" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-2" y="3" width="33" height="33">-->
                        <!--                <rect x="-1.30127" y="3.66626" width="32" height="32" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_781)">-->
                        <!--                <path d="M16.3991 26.9996H19.5991V26.8996L14.0991 21.0663L14.1324 20.9663H14.4657C15.6657 20.9663 16.6602 20.5996 17.4491 19.8663C18.2379 19.1329 18.7213 18.2774 18.8991 17.2996H20.2324V15.7329H18.8657C18.7991 15.3996 18.6824 15.0829 18.5157 14.7829C18.3491 14.4829 18.1435 14.1885 17.8991 13.8996H20.2324V12.3329H9.16572V14.2329H14.3657C14.9435 14.2329 15.4157 14.3774 15.7824 14.6663C16.1491 14.9552 16.3991 15.3107 16.5324 15.7329H9.16572V17.2996H16.5657C16.4324 17.7441 16.1768 18.1274 15.7991 18.4496C15.4213 18.7718 14.9102 18.9329 14.2657 18.9329H10.9324V21.0663L16.3991 26.9996ZM14.6991 32.9996C12.8546 32.9996 11.1213 32.6496 9.49906 31.9496C7.87683 31.2496 6.46572 30.2996 5.26572 29.0996C4.06572 27.8996 3.11572 26.4885 2.41572 24.8663C1.71572 23.2441 1.36572 21.5107 1.36572 19.6663C1.36572 17.8218 1.71572 16.0885 2.41572 14.4663C3.11572 12.8441 4.06572 11.4329 5.26572 10.2329C6.46572 9.03295 7.87683 8.08295 9.49906 7.38295C11.1213 6.68295 12.8546 6.33295 14.6991 6.33295C16.5435 6.33295 18.2768 6.68295 19.8991 7.38295C21.5213 8.08295 22.9324 9.03295 24.1324 10.2329C25.3324 11.4329 26.2824 12.8441 26.9824 14.4663C27.6824 16.0885 28.0324 17.8218 28.0324 19.6663C28.0324 21.5107 27.6824 23.2441 26.9824 24.8663C26.2824 26.4885 25.3324 27.8996 24.1324 29.0996C22.9324 30.2996 21.5213 31.2496 19.8991 31.9496C18.2768 32.6496 16.5435 32.9996 14.6991 32.9996ZM14.6991 30.3329C17.6768 30.3329 20.1991 29.2996 22.2657 27.2329C24.3324 25.1663 25.3657 22.6441 25.3657 19.6663C25.3657 16.6885 24.3324 14.1663 22.2657 12.0996C20.1991 10.0329 17.6768 8.99961 14.6991 8.99961C11.7213 8.99961 9.19906 10.0329 7.13239 12.0996C5.06572 14.1663 4.03239 16.6885 4.03239 19.6663C4.03239 22.6441 5.06572 25.1663 7.13239 27.2329C9.19906 29.2996 11.7213 30.3329 14.6991 30.3329Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            BCom.-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            (Finance) with diploma in logistics and supply chain management-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_781" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-2" y="3" width="33" height="33">-->
                        <!--                <rect x="-1.30127" y="3.66626" width="32" height="32" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_781)">-->
                        <!--                <path d="M16.3991 26.9996H19.5991V26.8996L14.0991 21.0663L14.1324 20.9663H14.4657C15.6657 20.9663 16.6602 20.5996 17.4491 19.8663C18.2379 19.1329 18.7213 18.2774 18.8991 17.2996H20.2324V15.7329H18.8657C18.7991 15.3996 18.6824 15.0829 18.5157 14.7829C18.3491 14.4829 18.1435 14.1885 17.8991 13.8996H20.2324V12.3329H9.16572V14.2329H14.3657C14.9435 14.2329 15.4157 14.3774 15.7824 14.6663C16.1491 14.9552 16.3991 15.3107 16.5324 15.7329H9.16572V17.2996H16.5657C16.4324 17.7441 16.1768 18.1274 15.7991 18.4496C15.4213 18.7718 14.9102 18.9329 14.2657 18.9329H10.9324V21.0663L16.3991 26.9996ZM14.6991 32.9996C12.8546 32.9996 11.1213 32.6496 9.49906 31.9496C7.87683 31.2496 6.46572 30.2996 5.26572 29.0996C4.06572 27.8996 3.11572 26.4885 2.41572 24.8663C1.71572 23.2441 1.36572 21.5107 1.36572 19.6663C1.36572 17.8218 1.71572 16.0885 2.41572 14.4663C3.11572 12.8441 4.06572 11.4329 5.26572 10.2329C6.46572 9.03295 7.87683 8.08295 9.49906 7.38295C11.1213 6.68295 12.8546 6.33295 14.6991 6.33295C16.5435 6.33295 18.2768 6.68295 19.8991 7.38295C21.5213 8.08295 22.9324 9.03295 24.1324 10.2329C25.3324 11.4329 26.2824 12.8441 26.9824 14.4663C27.6824 16.0885 28.0324 17.8218 28.0324 19.6663C28.0324 21.5107 27.6824 23.2441 26.9824 24.8663C26.2824 26.4885 25.3324 27.8996 24.1324 29.0996C22.9324 30.2996 21.5213 31.2496 19.8991 31.9496C18.2768 32.6496 16.5435 32.9996 14.6991 32.9996ZM14.6991 30.3329C17.6768 30.3329 20.1991 29.2996 22.2657 27.2329C24.3324 25.1663 25.3657 22.6441 25.3657 19.6663C25.3657 16.6885 24.3324 14.1663 22.2657 12.0996C20.1991 10.0329 17.6768 8.99961 14.6991 8.99961C11.7213 8.99961 9.19906 10.0329 7.13239 12.0996C5.06572 14.1663 4.03239 16.6885 4.03239 19.6663C4.03239 22.6441 5.06572 25.1663 7.13239 27.2329C9.19906 29.2996 11.7213 30.3329 14.6991 30.3329Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            BCom.-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            (Finance) with CAP (Corporate accounting)-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_796" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-1" y="4" width="32" height="32">-->
                        <!--                <rect x="-1" y="4" width="32" height="32" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_796)">-->
                        <!--                <path d="M1.66699 32V8H15.0003V13.3333H28.3337V32H1.66699ZM4.33366 29.3333H7.00033V26.6667H4.33366V29.3333ZM4.33366 24H7.00033V21.3333H4.33366V24ZM4.33366 18.6667H7.00033V16H4.33366V18.6667ZM4.33366 13.3333H7.00033V10.6667H4.33366V13.3333ZM9.66699 29.3333H12.3337V26.6667H9.66699V29.3333ZM9.66699 24H12.3337V21.3333H9.66699V24ZM9.66699 18.6667H12.3337V16H9.66699V18.6667ZM9.66699 13.3333H12.3337V10.6667H9.66699V13.3333ZM15.0003 29.3333H25.667V16H15.0003V18.6667H17.667V21.3333H15.0003V24H17.667V26.6667H15.0003V29.3333ZM20.3337 21.3333V18.6667H23.0003V21.3333H20.3337ZM20.3337 26.6667V24H23.0003V26.6667H20.3337Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            BCom.-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            (Co-operation) with CMA (US)-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_837" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-7" y="0" width="38" height="38">-->
                        <!--                <rect x="-7" width="38" height="38" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_837)">-->
                        <!--                <path d="M11.9998 33.2501C8.91234 33.2501 6.29324 32.1747 4.14255 30.024C1.99185 27.8733 0.916504 25.2542 0.916504 22.1667C0.916504 19.6862 1.6488 17.4629 3.11338 15.4969C4.57796 13.531 6.49775 12.2049 8.87275 11.5188C8.34498 11.3869 7.83039 11.1955 7.329 10.9449C6.82761 10.6942 6.379 10.3709 5.98317 9.97506C5.11234 9.10423 4.55157 8.06846 4.30088 6.86777C4.05018 5.66707 3.99081 4.44659 4.12275 3.20631C5.36303 3.07436 6.58352 3.13374 7.78421 3.38443C8.98491 3.63513 10.0207 4.19589 10.8915 5.06673C11.4984 5.67367 11.9405 6.35978 12.2175 7.12506C12.4946 7.89034 12.6728 8.6952 12.7519 9.53964C13.095 8.72159 13.5106 7.94971 13.9988 7.22402C14.487 6.49832 15.0346 5.832 15.6415 5.22506C15.9318 4.93478 16.3012 4.78964 16.7498 4.78964C17.1984 4.78964 17.5679 4.93478 17.8582 5.22506C18.1484 5.51534 18.2936 5.88478 18.2936 6.33339C18.2936 6.782 18.1484 7.15145 17.8582 7.44173C17.2776 8.02228 16.763 8.66221 16.3144 9.36152C15.8658 10.0608 15.5359 10.8063 15.3248 11.598C17.6471 12.3369 19.5207 13.6761 20.9457 15.6157C22.3707 17.5553 23.0832 19.7389 23.0832 22.1667C23.0832 25.2542 22.0078 27.8733 19.8571 30.024C17.7064 32.1747 15.0873 33.2501 11.9998 33.2501ZM11.9998 30.0834C14.1901 30.0834 16.0571 29.3115 17.6009 27.7678C19.1446 26.224 19.9165 24.357 19.9165 22.1667C19.9165 19.9764 19.1446 18.1094 17.6009 16.5657C16.0571 15.0219 14.1901 14.2501 11.9998 14.2501C9.80956 14.2501 7.94255 15.0219 6.3988 16.5657C4.85505 18.1094 4.08317 19.9764 4.08317 22.1667C4.08317 24.357 4.85505 26.224 6.3988 27.7678C7.94255 29.3115 9.80956 30.0834 11.9998 30.0834Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            B.Sc.-->
                        <!--            <br/>-->
                        <!--            Food technology-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            With diploma in quality assurance manager-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_852" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-2" y="2" width="32" height="32">-->
                        <!--                <rect x="-2" y="2" width="32" height="32" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_852)">-->
                        <!--                <path d="M0.666992 28.6666V26H8.33366C7.84477 24.1111 6.91699 22.4833 5.55033 21.1166C4.18366 19.75 2.55588 18.8222 0.666992 18.3333C1.11144 18.2222 1.55033 18.1389 1.98366 18.0833C2.41699 18.0278 2.86699 18 3.33366 18C6.31144 18 8.83366 19.0333 10.9003 21.1C12.967 23.1666 14.0003 25.6889 14.0003 28.6666H0.666992ZM16.667 28.6666C16.667 27.7333 16.567 26.8055 16.367 25.8833C16.167 24.9611 15.8781 24.0778 15.5003 23.2333C16.4337 21.6555 17.7059 20.3889 19.317 19.4333C20.9281 18.4778 22.7114 18 24.667 18C25.1337 18 25.5837 18.0278 26.017 18.0833C26.4503 18.1389 26.8892 18.2222 27.3337 18.3333C25.4448 18.8222 23.8225 19.75 22.467 21.1166C21.1114 22.4833 20.1781 24.1111 19.667 26H27.3337V28.6666H16.667ZM14.0003 20.7C14.0003 19.2555 14.267 17.9 14.8003 16.6333C15.3337 15.3666 16.067 14.25 17.0003 13.2833C17.9337 12.3166 19.0281 11.5444 20.2837 10.9666C21.5392 10.3889 22.8781 10.0778 24.3003 10.0333C23.0559 10.8111 21.967 11.7666 21.0337 12.9C20.1003 14.0333 19.3781 15.3 18.867 16.7C17.8892 17.1666 16.9948 17.7389 16.1837 18.4166C15.3725 19.0944 14.6448 19.8555 14.0003 20.7ZM11.567 18.2C11.3003 18 11.0337 17.8111 10.767 17.6333C10.5003 17.4555 10.2225 17.2778 9.93366 17.1C9.93366 16.9666 9.94477 16.8278 9.96699 16.6833C9.98921 16.5389 10.0003 16.4 10.0003 16.2666C10.0003 14.5778 9.73366 12.9778 9.20033 11.4666C8.66699 9.95554 7.91144 8.57776 6.93366 7.33331C8.40033 7.93331 9.67255 8.79442 10.7503 9.91665C11.8281 11.0389 12.6559 12.3333 13.2337 13.8C12.8337 14.4666 12.4892 15.1722 12.2003 15.9166C11.9114 16.6611 11.7003 17.4222 11.567 18.2Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            B.Sc.-->
                        <!--            <br/>-->
                        <!--            Botany-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            With diploma in dairy product processing-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_867" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-1" y="2" width="32" height="32">-->
                        <!--                <rect x="-1" y="2" width="32" height="32" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_867)">-->
                        <!--                <path d="M15.0003 31.3334C13.3781 31.1334 11.767 30.6945 10.167 30.0167C8.56699 29.3389 7.13921 28.3667 5.88366 27.1C4.6281 25.8334 3.61144 24.2334 2.83366 22.3C2.05588 20.3667 1.66699 18.0445 1.66699 15.3334V14H3.00033C4.13366 14 5.30033 14.1445 6.50033 14.4334C7.70033 14.7222 8.82255 15.1556 9.86699 15.7334C10.1337 13.8222 10.7392 11.8611 11.6837 9.85002C12.6281 7.83891 13.7337 6.11113 15.0003 4.66669C16.267 6.11113 17.3725 7.83891 18.317 9.85002C19.2614 11.8611 19.867 13.8222 20.1337 15.7334C21.1781 15.1556 22.3003 14.7222 23.5003 14.4334C24.7003 14.1445 25.867 14 27.0003 14H28.3337V15.3334C28.3337 18.0445 27.9448 20.3667 27.167 22.3C26.3892 24.2334 25.3725 25.8334 24.117 27.1C22.8614 28.3667 21.4392 29.3389 19.8503 30.0167C18.2614 30.6945 16.6448 31.1334 15.0003 31.3334ZM14.9337 28.6C14.6892 24.9111 13.5948 22.1222 11.6503 20.2334C9.70588 18.3445 7.28921 17.1778 4.40033 16.7334C4.64477 20.5334 5.77255 23.3667 7.78366 25.2334C9.79477 27.1 12.1781 28.2222 14.9337 28.6ZM15.0003 20.1334C15.3337 19.6445 15.7392 19.1389 16.217 18.6167C16.6948 18.0945 17.1559 17.6445 17.6003 17.2667C17.5559 16 17.3059 14.6778 16.8503 13.3C16.3948 11.9222 15.7781 10.5778 15.0003 9.26669C14.2225 10.5778 13.6059 11.9222 13.1503 13.3C12.6948 14.6778 12.4448 16 12.4003 17.2667C12.8448 17.6445 13.3114 18.0945 13.8003 18.6167C14.2892 19.1389 14.6892 19.6445 15.0003 20.1334ZM17.6003 28C18.4225 27.7334 19.2781 27.3445 20.167 26.8334C21.0559 26.3222 21.8837 25.6278 22.6503 24.75C23.417 23.8722 24.0725 22.7778 24.617 21.4667C25.1614 20.1556 25.4892 18.5778 25.6003 16.7334C23.5114 17.0445 21.6781 17.7389 20.1003 18.8167C18.5225 19.8945 17.3114 21.2667 16.467 22.9334C16.7337 23.6445 16.9614 24.4222 17.1503 25.2667C17.3392 26.1111 17.4892 27.0222 17.6003 28Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            B.Sc.-->
                        <!--            <br/>-->
                        <!--            Botany-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            With diploma in beauty care management-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--    <section class="programme-item">-->
                        <!--        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="36" viewbox="0 0 38 36" fill="none">-->
                        <!--            <rect x="6" width="32" height="32" rx="16" fill="#CBF0FF"/>-->
                        <!--            <mask id="mask0_418_882" style="mask-type:alpha" maskunits="userSpaceOnUse" x="-1" y="4" width="32" height="32">-->
                        <!--                <rect x="-1" y="4" width="32" height="32" fill="#0E5D7C"/>-->
                        <!--            </mask>-->
                        <!--            <g mask="url(#mask0_418_882)">-->
                        <!--                <path d="M7 33.3334V27.6C5.73333 26.4445 4.75 25.0945 4.05 23.55C3.35 22.0056 3 20.3778 3 18.6667C3 15.3334 4.16667 12.5 6.5 10.1667C8.83333 7.83335 11.6667 6.66669 15 6.66669C17.7778 6.66669 20.2389 7.48335 22.3833 9.11669C24.5278 10.75 25.9222 12.8778 26.5667 15.5L28.3 22.3334C28.4111 22.7556 28.3333 23.1389 28.0667 23.4834C27.8 23.8278 27.4444 24 27 24H24.3333V28C24.3333 28.7334 24.0722 29.3611 23.55 29.8834C23.0278 30.4056 22.4 30.6667 21.6667 30.6667H19V33.3334H16.3333V28H21.6667V21.3334H25.2667L24 16.1667C23.4889 14.1445 22.4 12.5 20.7333 11.2334C19.0667 9.96669 17.1556 9.33335 15 9.33335C12.4222 9.33335 10.2222 10.2334 8.4 12.0334C6.57778 13.8334 5.66667 16.0222 5.66667 18.6C5.66667 19.9334 5.93889 21.2 6.48333 22.4C7.02778 23.6 7.8 24.6667 8.8 25.6L9.66667 26.4V33.3334H7ZM13.6667 24H16.3333L16.5333 22.3334C16.7111 22.2667 16.8722 22.1889 17.0167 22.1C17.1611 22.0111 17.2889 21.9111 17.4 21.8L18.9333 22.4667L20.2667 20.2L18.9333 19.2C18.9778 19.0222 19 18.8445 19 18.6667C19 18.4889 18.9778 18.3111 18.9333 18.1334L20.2667 17.1334L18.9333 14.8667L17.4 15.5334C17.2889 15.4222 17.1611 15.3222 17.0167 15.2334C16.8722 15.1445 16.7111 15.0667 16.5333 15L16.3333 13.3334H13.6667L13.4667 15C13.2889 15.0667 13.1278 15.1445 12.9833 15.2334C12.8389 15.3222 12.7111 15.4222 12.6 15.5334L11.0667 14.8667L9.73333 17.1334L11.0667 18.1334C11.0222 18.3111 11 18.4889 11 18.6667C11 18.8445 11.0222 19.0222 11.0667 19.2L9.73333 20.2L11.0667 22.4667L12.6 21.8C12.7111 21.9111 12.8389 22.0111 12.9833 22.1C13.1278 22.1889 13.2889 22.2667 13.4667 22.3334L13.6667 24ZM15 20.6667C14.4444 20.6667 13.9722 20.4722 13.5833 20.0834C13.1944 19.6945 13 19.2222 13 18.6667C13 18.1111 13.1944 17.6389 13.5833 17.25C13.9722 16.8611 14.4444 16.6667 15 16.6667C15.5556 16.6667 16.0278 16.8611 16.4167 17.25C16.8056 17.6389 17 18.1111 17 18.6667C17 19.2222 16.8056 19.6945 16.4167 20.0834C16.0278 20.4722 15.5556 20.6667 15 20.6667Z" fill="#0E5D7C"/>-->
                        <!--            </g>-->
                        <!--        </svg>-->

                        <!--        <div class="programme-name">-->
                        <!--            B.Sc.-->
                        <!--            <br/>-->
                        <!--            Psychology-->
                        <!--        </div>-->
                        <!--        <div class="programme-sub">-->
                        <!--            With Certificate in Learning Disability-->
                        <!--        </div>-->
                        <!--        <a href="#" class="programme-link">-->
                        <!--            Course details-->
                        <!--        </a>-->
                        <!--    </section>-->
                        <!--</div>-->
                        <a href="/programmes" class="home-btn view-all " id="programme-all">
                            View all courses
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 25" fill="none">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2.47913C6.615 2.47913 2.25 6.84413 2.25 12.2291C2.25 17.6141 6.615 21.9791 12 21.9791C17.385 21.9791 21.75 17.6141 21.75 12.2291C21.75 6.84413 17.385 2.47913 12 2.47913ZM16.28 12.7591C16.4205 12.6185 16.4993 12.4279 16.4993 12.2291C16.4993 12.0304 16.4205 11.8398 16.28 11.6991L13.28 8.69913C13.2113 8.62544 13.1285 8.56634 13.0365 8.52534C12.9445 8.48435 12.8452 8.46231 12.7445 8.46053C12.6438 8.45876 12.5438 8.47728 12.4504 8.515C12.357 8.55272 12.2722 8.60887 12.201 8.68009C12.1297 8.75131 12.0736 8.83614 12.0359 8.92953C11.9982 9.02292 11.9796 9.12295 11.9814 9.22365C11.9832 9.32435 12.0052 9.42366 12.0462 9.51566C12.0872 9.60766 12.1463 9.69046 12.22 9.75913L13.94 11.4791H8.25C8.05109 11.4791 7.86032 11.5581 7.71967 11.6988C7.57902 11.8394 7.5 12.0302 7.5 12.2291C7.5 12.428 7.57902 12.6188 7.71967 12.7595C7.86032 12.9001 8.05109 12.9791 8.25 12.9791H13.94L12.22 14.6991C12.1463 14.7678 12.0872 14.8506 12.0462 14.9426C12.0052 15.0346 11.9832 15.1339 11.9814 15.2346C11.9796 15.3353 11.9982 15.4353 12.0359 15.5287C12.0736 15.6221 12.1297 15.7069 12.201 15.7782C12.2722 15.8494 12.357 15.9055 12.4504 15.9432C12.5438 15.981 12.6438 15.9995 12.7445 15.9977C12.8452 15.9959 12.9445 15.9739 13.0365 15.9329C13.1285 15.8919 13.2113 15.8328 13.28 15.7591L16.28 12.7591Z" fill="white"/>
                            </svg>
                        </a>
                    </div>
                </section>
                <style>
                    #about-vector{
                        height: 450px;
                        bottom: 0;
                        top: auto;
                        width: 500px;
                        object-fit: cover;
                    }
                    .news-letter{
                    background: #03384E;
                    overflow:hidden;
                    }
                    #in-white{
                        color: #FFF;
                    }
                    #vector5{
                        z-index: 0;
    pointer-events: none;
    touch-action: none;
}

                    .news-wrapper{
                    border-radius: 16px;
                        opacity: 1;
    visibility: visible;
    transform: translateY(0);
    margin-top:65px;
    background:transparent;
    z-index:10;

                    }

                    .news-letter-img{
                    width: 612.893px;
                    height: 332px;
                    border-radius: 16px;
                    overflow:hidden;
                    background: rgba(14, 93, 124, 0.20);
                    }
                    .news-letter-img img{
                    border-radius: 16px;
                    width:100%;
                    height:100%;
                    object-fit:cover;
                    object-position:top;
                    transition:all 0.4s;
                    }
                    .news-letter-content{
                    display: flex;
                    width: 100%;
                    justify-content: space-between;
                    padding-top: 22px;
                    }
                    .news-title{
                    color: #FFF;
font-family: "Plus Jakarta Sans";
font-size: 18px;
font-style: normal;
font-weight: 600;
line-height: normal;
transition:all 0.4s;

                    }
                    .news-letter-box{
                    width:100%;
                    z-index:8;
                    border-radius: 16px;

                    }
                    .letter-btn{
                    position: absolute;
                    z-index: 9;
                    width: 100%;
                    top: 0;
                    height: 332px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    opacity: 0;
                    transition:all 0.4s;
                    }
                    .news-letter-box:hover .letter-btn{
                    opacity:1;
                    }
                    .news-letter-box:hover .news-title{
                    color: #13BBFD;
                    }
                    .news-letter-box:hover .news-letter-img img{
                    scale:1.05;
                    opacity:0.7;
                    }
                    #news-all{
                    display:none;
                    }
                    .notizia .landing-page-btn {
                        width: 125px;
                    }
                    @media(max-width:900px){
                    .news-wrapper{
                    margin-top:24px;
                    }
                    .news-letter-img{
                    width:300px;
                    height:300px;
                    }
                    .news-title{
                    font-size:14px;
                    }
                    .letter-btn{
                    height:300px;
                    }
                    .notizia .landing-page-btn {
                        display:none;
                    }
                    #news-all{
                    display:flex;
                    margin: auto;
                    margin-top: 50px;
                    z-index: 12;
                    position: 25px;
                    }
                    }
                    #home-page-content{
                    z-index:1020;
                    }
                </style>
                <section class="news-letter pt100 pb100">
                    <img src="/cpa/static/img/vector-home.svg" class="vector2" id="vector5" loading="lazy" style=""/>
                    <div class="container-div">
                        <div class="notizia ">

                            <div class="award-remark-moment">
                               <svg xmlns="http://www.w3.org/2000/svg" width="39" height="49" viewBox="0 0 39 49" fill="none">
<path d="M19.4757 1.02316L2.63015 2.92333C1.70171 3.02806 1 3.81337 1 4.7477V31.3892C1 31.6492 1.05339 31.9059 1.16592 32.1402C4.6513 39.3985 14.0732 45.3048 19.007 47.684C19.4394 47.8925 19.9369 47.9094 20.3849 47.7368C31.1157 43.603 36.6964 35.8398 38.3184 32.1071C38.411 31.8939 38.4531 31.6642 38.4531 31.4318V4.74859C38.4531 3.81388 37.7509 3.02838 36.822 2.92411L19.8863 1.02305C19.7499 1.00773 19.6121 1.00777 19.4757 1.02316Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M11.125 12C10.089 12 9.25 12.84 9.25 13.875V27C9.25 27.7956 9.56607 28.5587 10.1287 29.1213C10.6913 29.6839 11.4544 30 12.25 30H27.25C26.4544 30 25.6913 29.6839 25.1287 29.1213C24.5661 28.5587 24.25 27.7956 24.25 27V13.875C24.25 12.839 23.41 12 22.375 12H11.125ZM19 18.75C18.8011 18.75 18.6103 18.829 18.4697 18.9697C18.329 19.1103 18.25 19.3011 18.25 19.5C18.25 19.6989 18.329 19.8897 18.4697 20.0303C18.6103 20.171 18.8011 20.25 19 20.25H20.5C20.6989 20.25 20.8897 20.171 21.0303 20.0303C21.171 19.8897 21.25 19.6989 21.25 19.5C21.25 19.3011 21.171 19.1103 21.0303 18.9697C20.8897 18.829 20.6989 18.75 20.5 18.75H19ZM18.25 16.5C18.25 16.3011 18.329 16.1103 18.4697 15.9697C18.6103 15.829 18.8011 15.75 19 15.75H20.5C20.6989 15.75 20.8897 15.829 21.0303 15.9697C21.171 16.1103 21.25 16.3011 21.25 16.5C21.25 16.6989 21.171 16.8897 21.0303 17.0303C20.8897 17.171 20.6989 17.25 20.5 17.25H19C18.8011 17.25 18.6103 17.171 18.4697 17.0303C18.329 16.8897 18.25 16.6989 18.25 16.5ZM13 21.75C12.8011 21.75 12.6103 21.829 12.4697 21.9697C12.329 22.1103 12.25 22.3011 12.25 22.5C12.25 22.6989 12.329 22.8897 12.4697 23.0303C12.6103 23.171 12.8011 23.25 13 23.25H20.5C20.6989 23.25 20.8897 23.171 21.0303 23.0303C21.171 22.8897 21.25 22.6989 21.25 22.5C21.25 22.3011 21.171 22.1103 21.0303 21.9697C20.8897 21.829 20.6989 21.75 20.5 21.75H13ZM12.25 25.5C12.25 25.3011 12.329 25.1103 12.4697 24.9697C12.6103 24.829 12.8011 24.75 13 24.75H20.5C20.6989 24.75 20.8897 24.829 21.0303 24.9697C21.171 25.1103 21.25 25.3011 21.25 25.5C21.25 25.6989 21.171 25.8897 21.0303 26.0303C20.8897 26.171 20.6989 26.25 20.5 26.25H13C12.8011 26.25 12.6103 26.171 12.4697 26.0303C12.329 25.8897 12.25 25.6989 12.25 25.5ZM13 15.75C12.8011 15.75 12.6103 15.829 12.4697 15.9697C12.329 16.1103 12.25 16.3011 12.25 16.5V19.5C12.25 19.914 12.586 20.25 13 20.25H16C16.1989 20.25 16.3897 20.171 16.5303 20.0303C16.671 19.8897 16.75 19.6989 16.75 19.5V16.5C16.75 16.3011 16.671 16.1103 16.5303 15.9697C16.3897 15.829 16.1989 15.75 16 15.75H13Z" fill="#5CD1FF"/>
<path d="M25.75 15.75H27.625C28.246 15.75 28.75 16.254 28.75 16.875V27C28.75 27.3978 28.592 27.7794 28.3107 28.0607C28.0294 28.342 27.6478 28.5 27.25 28.5C26.8522 28.5 26.4706 28.342 26.1893 28.0607C25.908 27.7794 25.75 27.3978 25.75 27V15.75Z" fill="#5CD1FF"/>
</svg>


                                <div class="remark-moment" id="in-white">News letter
                                </div>
                            </div>
                            <div class="programme_head pt12" style="z-index:10;">
                                <div class="award-head" id="in-white" style="width:auto">
                                    Notizia keeps you updated
                                </div>
                                <a href="/news-letter" class="landing-page-btn ">
                                    <span class="btn-title">View all</span>
                                    <span class="icon-arrow">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2.25C6.615 2.25 2.25 6.615 2.25 12C2.25 17.385 6.615 21.75 12 21.75C17.385 21.75 21.75 17.385 21.75 12C21.75 6.615 17.385 2.25 12 2.25ZM16.28 12.53C16.4205 12.3894 16.4993 12.1988 16.4993 12C16.4993 11.8012 16.4205 11.6106 16.28 11.47L13.28 8.47C13.2113 8.39631 13.1285 8.33721 13.0365 8.29622C12.9445 8.25523 12.8452 8.23318 12.7445 8.23141C12.6438 8.22963 12.5438 8.24816 12.4504 8.28588C12.357 8.3236 12.2722 8.37974 12.201 8.45096C12.1297 8.52218 12.0736 8.60701 12.0359 8.7004C11.9982 8.79379 11.9796 8.89382 11.9814 8.99452C11.9832 9.09522 12.0052 9.19454 12.0462 9.28654C12.0872 9.37854 12.1463 9.46134 12.22 9.53L13.94 11.25H8.25C8.05109 11.25 7.86032 11.329 7.71967 11.4697C7.57902 11.6103 7.5 11.8011 7.5 12C7.5 12.1989 7.57902 12.3897 7.71967 12.5303C7.86032 12.671 8.05109 12.75 8.25 12.75H13.94L12.22 14.47C12.1463 14.5387 12.0872 14.6215 12.0462 14.7135C12.0052 14.8055 11.9832 14.9048 11.9814 15.0055C11.9796 15.1062 11.9982 15.2062 12.0359 15.2996C12.0736 15.393 12.1297 15.4778 12.201 15.549C12.2722 15.6203 12.357 15.6764 12.4504 15.7141C12.5438 15.7518 12.6438 15.7704 12.7445 15.7686C12.8452 15.7668 12.9445 15.7448 13.0365 15.7038C13.1285 15.6628 13.2113 15.6037 13.28 15.53L16.28 12.53Z" fill="black"/>
</svg>
                                    </span>
                                </a>
                            </div>
                        </div>
                    </div>
                     <div class="wrappers news-wrapper">
                              <t t-foreach="request.env['news.letter'].sudo().search([], limit=6)" t-as="news_letter">
      <div class="news-letter-box" id="news-etter">
          <div class="news-letter-img">
          <img t-att-src="'/web/image?model=news.letter&amp;id=%s&amp;field=news_image' % news_letter.id"/>
            <t t-if="news_letter">
                <a t-att-href="str(news_letter['url'])" target="_blank" class="letter-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="70" height="70" viewBox="0 0 70 70" fill="none">
<rect width="70" height="70" rx="35" fill="#0E5D7C" fill-opacity="0.7"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M36.1317 25.6316C36.2957 25.4678 36.5181 25.3757 36.75 25.3757C36.9819 25.3757 37.2043 25.4678 37.3683 25.6316L46.1183 34.3816C46.2822 34.5457 46.3742 34.7681 46.3742 35C46.3742 35.2318 46.2822 35.4542 46.1183 35.6183L37.3683 44.3683C37.2882 44.4543 37.1916 44.5232 37.0843 44.571C36.977 44.6189 36.8611 44.6446 36.7436 44.6467C36.6261 44.6487 36.5094 44.6271 36.4005 44.5831C36.2915 44.5391 36.1925 44.4736 36.1095 44.3905C36.0264 44.3074 35.9609 44.2084 35.9169 44.0995C35.8728 43.9905 35.8512 43.8738 35.8533 43.7564C35.8554 43.6389 35.8811 43.523 35.9289 43.4157C35.9767 43.3083 36.0457 43.2117 36.1317 43.1316L43.3883 35.875H24.5C24.2679 35.875 24.0454 35.7828 23.8813 35.6187C23.7172 35.4546 23.625 35.232 23.625 35C23.625 34.7679 23.7172 34.5453 23.8813 34.3812C24.0454 34.2171 24.2679 34.125 24.5 34.125H43.3883L36.1317 26.8683C35.9678 26.7042 35.8758 26.4818 35.8758 26.25C35.8758 26.0181 35.9678 25.7957 36.1317 25.6316Z" fill="white"/>
</svg>
                </a>
            </t>
            </div>
          <div class="news-letter-content">
              <div class="news-title" t-esc="news_letter.title"/>
<!--             <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">-->
<!--  <path fill-rule="evenodd" clip-rule="evenodd" d="M8.24985 3.75H19.4998C19.6988 3.75 19.8895 3.82902 20.0302 3.96967C20.1708 4.11032 20.2498 4.30109 20.2498 4.5V15.75C20.2498 15.9489 20.1708 16.1397 20.0302 16.2803C19.8895 16.421 19.6988 16.5 19.4998 16.5C19.3009 16.5 19.1102 16.421 18.9695 16.2803C18.8289 16.1397 18.7498 15.9489 18.7498 15.75V6.31L5.02985 20.03C4.88767 20.1625 4.69963 20.2346 4.50532 20.2312C4.31102 20.2277 4.12564 20.149 3.98822 20.0116C3.85081 19.8742 3.7721 19.6888 3.76867 19.4945C3.76524 19.3002 3.83737 19.1122 3.96985 18.97L17.6898 5.25H8.24985C8.05093 5.25 7.86017 5.17098 7.71952 5.03033C7.57886 4.88968 7.49985 4.69891 7.49985 4.5C7.49985 4.30109 7.57886 4.11032 7.71952 3.96967C7.86017 3.82902 8.05093 3.75 8.24985 3.75Z" fill="white"/>-->
<!--</svg>-->

              <!--<a href="#" class="view-details">-->
              <!--    View Details-->
              <!--</a>-->
          </div>
      </div>

      </t>
  </div>
  <a href="/news-letter" class="landing-page-btn " id="news-all">
                                    <span class="btn-title">View all</span>
                                    <span class="icon-arrow">
                                       <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2.25C6.615 2.25 2.25 6.615 2.25 12C2.25 17.385 6.615 21.75 12 21.75C17.385 21.75 21.75 17.385 21.75 12C21.75 6.615 17.385 2.25 12 2.25ZM16.28 12.53C16.4205 12.3894 16.4993 12.1988 16.4993 12C16.4993 11.8012 16.4205 11.6106 16.28 11.47L13.28 8.47C13.2113 8.39631 13.1285 8.33721 13.0365 8.29622C12.9445 8.25523 12.8452 8.23318 12.7445 8.23141C12.6438 8.22963 12.5438 8.24816 12.4504 8.28588C12.357 8.3236 12.2722 8.37974 12.201 8.45096C12.1297 8.52218 12.0736 8.60701 12.0359 8.7004C11.9982 8.79379 11.9796 8.89382 11.9814 8.99452C11.9832 9.09522 12.0052 9.19454 12.0462 9.28654C12.0872 9.37854 12.1463 9.46134 12.22 9.53L13.94 11.25H8.25C8.05109 11.25 7.86032 11.329 7.71967 11.4697C7.57902 11.6103 7.5 11.8011 7.5 12C7.5 12.1989 7.57902 12.3897 7.71967 12.5303C7.86032 12.671 8.05109 12.75 8.25 12.75H13.94L12.22 14.47C12.1463 14.5387 12.0872 14.6215 12.0462 14.7135C12.0052 14.8055 11.9832 14.9048 11.9814 15.0055C11.9796 15.1062 11.9982 15.2062 12.0359 15.2996C12.0736 15.393 12.1297 15.4778 12.201 15.549C12.2722 15.6203 12.357 15.6764 12.4504 15.7141C12.5438 15.7518 12.6438 15.7704 12.7445 15.7686C12.8452 15.7668 12.9445 15.7448 13.0365 15.7038C13.1285 15.6628 13.2113 15.6037 13.28 15.53L16.28 12.53Z" fill="black"/>
</svg>
                                    </span>
                                </a>
                </section>
                <section class="features  pt100 pb100">
                    <!--<img src="/cpa/static/img/vector-3.svg" class="vector-feature" loading="lazy" style=""/>-->
                    <div class="container-div">
                        <div class="feature ">

                            <div class="award-remark-moment">
                                <svg xmlns="http://www.w3.org/2000/svg" width="39" height="49" viewbox="0 0 39 49" fill="none">
                                    <path d="M19.4757 1.02316L2.63015 2.92333C1.70171 3.02806 1 3.81337 1 4.7477V31.3892C1 31.6492 1.05339 31.9059 1.16592 32.1402C4.6513 39.3985 14.0732 45.3048 19.007 47.684C19.4394 47.8925 19.9369 47.9094 20.3849 47.7368C31.1157 43.603 36.6964 35.8398 38.3184 32.1071C38.411 31.8939 38.4531 31.6642 38.4531 31.4318V4.74859C38.4531 3.81388 37.7509 3.02838 36.822 2.92411L19.8863 1.02305C19.7499 1.00773 19.6121 1.00777 19.4757 1.02316Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
                                    <path d="M18.25 13.533C16.6831 12.5294 14.8608 11.9973 13 12C11.893 11.9989 10.7939 12.1866 9.75 12.555C9.60379 12.6067 9.4772 12.7024 9.38766 12.8291C9.29812 12.9557 9.25002 13.1069 9.25 13.262V27.512C9.25002 27.632 9.27882 27.7502 9.33398 27.8567C9.38915 27.9633 9.46907 28.055 9.56703 28.1243C9.665 28.1936 9.77815 28.2383 9.89699 28.2548C10.0158 28.2713 10.1369 28.259 10.25 28.219C11.1333 27.9075 12.0633 27.7488 13 27.75C14.995 27.75 16.823 28.457 18.25 29.636V13.533ZM19.75 29.636C21.2264 28.4141 23.0836 27.747 25 27.75C25.966 27.75 26.89 27.916 27.75 28.22C27.8632 28.26 27.9843 28.2723 28.1033 28.2558C28.2222 28.2392 28.3354 28.1944 28.4334 28.125C28.5314 28.0556 28.6113 27.9638 28.6664 27.8571C28.7215 27.7504 28.7501 27.6321 28.75 27.512V13.262C28.75 13.1069 28.7019 12.9557 28.6123 12.8291C28.5228 12.7024 28.3962 12.6067 28.25 12.555C27.2061 12.1866 26.107 11.9989 25 12C23.1392 11.9973 21.3169 12.5294 19.75 13.533V29.636Z" fill="#5CD1FF"/>
                                </svg>

                                <div class="remark-moment">Features
                                </div>
                            </div>
                            <div class="programme_head pt12">
                                <div class="award-head" style="width:auto">
                                    See our features
                                </div>
                            </div>
                        </div>
                    </div>
                    <section class="our-feature">
                        <div class="feature-over"/>
                        <img src="/cpa/static/img/feature.png" class="w-100 h-100 feature-img" loading="lazy" style=""/>
                        <div class="feature-items">
                            <div class="feature-item">
                                <div class="feature-content">
                                    <div class="feature-number">
                                        01
                                    </div>
                                    <div class="feature-name">
                                        Flexibility and convenience
                                    </div>
                                    <div class="feature-text">
                                        Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de
                                        texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias.
                                    </div>
                                </div>
                            </div>
                            <div class="feature-item feature-item2">
                                <div class="feature-content">
                                    <div class="feature-number">
                                        02
                                    </div>
                                    <div class="feature-name">
                                        Course accessibility
                                    </div>
                                    <div class="feature-text">
                                        Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de
                                        texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias.
                                    </div>
                                </div>
                            </div>
                            <div class="feature-item feature-item3">
                                <div class="feature-content">
                                    <div class="feature-number">
                                        03
                                    </div>
                                    <div class="feature-name">
                                        Cost-effectiveness
                                    </div>
                                    <div class="feature-text">
                                        Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de
                                        texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias.
                                    </div>
                                </div>
                            </div>
                            <div class="feature-item feature-item4">
                                <div class="feature-content">
                                    <div class="feature-number">
                                        04
                                    </div>
                                    <div class="feature-name">
                                        Academic excellence
                                    </div>
                                    <div class="feature-text">
                                        Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de
                                        texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias.
                                    </div>
                                </div>
                            </div>

                        </div>
                    </section>
                </section>
                <section class="latest-events pb100 o_colored_level" style="background-image: none;">
                    <div class="container-div">
                        <div class="latest ">
                            <div class="award-remark-moment">
                                <svg xmlns="http://www.w3.org/2000/svg" width="39" height="49" viewbox="0 0 39 49" fill="none">
                                    <path d="M19.4757 1.02316L2.63015 2.92333C1.70171 3.02806 1 3.81337 1 4.7477V31.3892C1 31.6492 1.05339 31.9059 1.16592 32.1402C4.6513 39.3985 14.0732 45.3048 19.007 47.684C19.4394 47.8925 19.9369 47.9094 20.3849 47.7368C31.1157 43.603 36.6964 35.8398 38.3184 32.1071C38.411 31.8939 38.4531 31.6642 38.4531 31.4318V4.74859C38.4531 3.81388 37.7509 3.02838 36.822 2.92411L19.8863 1.02305C19.7499 1.00773 19.6121 1.00777 19.4757 1.02316Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
                                    <path d="M18.25 13.533C16.6831 12.5294 14.8608 11.9973 13 12C11.893 11.9989 10.7939 12.1866 9.75 12.555C9.60379 12.6067 9.4772 12.7024 9.38766 12.8291C9.29812 12.9557 9.25002 13.1069 9.25 13.262V27.512C9.25002 27.632 9.27882 27.7502 9.33398 27.8567C9.38915 27.9633 9.46907 28.055 9.56703 28.1243C9.665 28.1936 9.77815 28.2383 9.89699 28.2548C10.0158 28.2713 10.1369 28.259 10.25 28.219C11.1333 27.9075 12.0633 27.7488 13 27.75C14.995 27.75 16.823 28.457 18.25 29.636V13.533ZM19.75 29.636C21.2264 28.4141 23.0836 27.747 25 27.75C25.966 27.75 26.89 27.916 27.75 28.22C27.8632 28.26 27.9843 28.2723 28.1033 28.2558C28.2222 28.2392 28.3354 28.1944 28.4334 28.125C28.5314 28.0556 28.6113 27.9638 28.6664 27.8571C28.7215 27.7504 28.7501 27.6321 28.75 27.512V13.262C28.75 13.1069 28.7019 12.9557 28.6123 12.8291C28.5228 12.7024 28.3962 12.6067 28.25 12.555C27.2061 12.1866 26.107 11.9989 25 12C23.1392 11.9973 21.3169 12.5294 19.75 13.533V29.636Z" fill="#5CD1FF"/>
                                </svg>

                                <div class="remark-moment">Latest events
                                </div>
                            </div>
                            <div class="programme_head pt12">
                                <div class="award-head" style="width:auto">
                                    Fresh from our campus
                                </div>

                                <a href="/blog/events-2" class="home-btn view-all mt0">
                                    View all events
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewbox="0 0 24 25" fill="none">
                                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2.47913C6.615 2.47913 2.25 6.84413 2.25 12.2291C2.25 17.6141 6.615 21.9791 12 21.9791C17.385 21.9791 21.75 17.6141 21.75 12.2291C21.75 6.84413 17.385 2.47913 12 2.47913ZM16.28 12.7591C16.4205 12.6185 16.4993 12.4279 16.4993 12.2291C16.4993 12.0304 16.4205 11.8398 16.28 11.6991L13.28 8.69913C13.2113 8.62544 13.1285 8.56634 13.0365 8.52534C12.9445 8.48435 12.8452 8.46231 12.7445 8.46053C12.6438 8.45876 12.5438 8.47728 12.4504 8.515C12.357 8.55272 12.2722 8.60887 12.201 8.68009C12.1297 8.75131 12.0736 8.83614 12.0359 8.92953C11.9982 9.02292 11.9796 9.12295 11.9814 9.22365C11.9832 9.32435 12.0052 9.42366 12.0462 9.51566C12.0872 9.60766 12.1463 9.69046 12.22 9.75913L13.94 11.4791H8.25C8.05109 11.4791 7.86032 11.5581 7.71967 11.6988C7.57902 11.8394 7.5 12.0302 7.5 12.2291C7.5 12.428 7.57902 12.6188 7.71967 12.7595C7.86032 12.9001 8.05109 12.9791 8.25 12.9791H13.94L12.22 14.6991C12.1463 14.7678 12.0872 14.8506 12.0462 14.9426C12.0052 15.0346 11.9832 15.1339 11.9814 15.2346C11.9796 15.3353 11.9982 15.4353 12.0359 15.5287C12.0736 15.6221 12.1297 15.7069 12.201 15.7782C12.2722 15.8494 12.357 15.9055 12.4504 15.9432C12.5438 15.981 12.6438 15.9995 12.7445 15.9977C12.8452 15.9959 12.9445 15.9739 13.0365 15.9329C13.1285 15.8919 13.2113 15.8328 13.28 15.7591L16.28 12.7591Z" fill="white"/>
                                    </svg>
                                </a>
                            </div>
                        </div>
 <section data-snippet="s_blog_posts" class="s_blog_posts s_dynamic_snippet_blog_posts  s_blog_posts_effect_marley s_dynamic o_colored_level s_blog_post_cpa_college s_blog_post_cpa_college_events o_dynamic_empty" data-name="Blog Posts" style="background-image: none;" data-filter-by-blog-id="-1" data-number-of-records="16" data-filter-id="17" data-template-key="cpa_college_events_snippet.dynamic_filter_template_blog_post_cpa_college" data-force-minimum-max-limit-to16="1">
            <div class="o_not_editable container">
                <div class="css_non_editable_mode_hidden">
                    <div class="missing_option_warning alert alert-info rounded-0 fade show d-none d-print-none o_default_snippet_text">
                        Your Dynamic Snippet will be displayed here... This message is displayed because you did not provided both a filter and a template to use.<br/>
                    </div>
                </div>
                <div class="dynamic_snippet_template"/>
            </div>
        </section>
        <a href="#" class="home-btn view-all " id="programme-all">
            View all courses
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 25" fill="none">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M12 2.47913C6.615 2.47913 2.25 6.84413 2.25 12.2291C2.25 17.6141 6.615 21.9791 12 21.9791C17.385 21.9791 21.75 17.6141 21.75 12.2291C21.75 6.84413 17.385 2.47913 12 2.47913ZM16.28 12.7591C16.4205 12.6185 16.4993 12.4279 16.4993 12.2291C16.4993 12.0304 16.4205 11.8398 16.28 11.6991L13.28 8.69913C13.2113 8.62544 13.1285 8.56634 13.0365 8.52534C12.9445 8.48435 12.8452 8.46231 12.7445 8.46053C12.6438 8.45876 12.5438 8.47728 12.4504 8.515C12.357 8.55272 12.2722 8.60887 12.201 8.68009C12.1297 8.75131 12.0736 8.83614 12.0359 8.92953C11.9982 9.02292 11.9796 9.12295 11.9814 9.22365C11.9832 9.32435 12.0052 9.42366 12.0462 9.51566C12.0872 9.60766 12.1463 9.69046 12.22 9.75913L13.94 11.4791H8.25C8.05109 11.4791 7.86032 11.5581 7.71967 11.6988C7.57902 11.8394 7.5 12.0302 7.5 12.2291C7.5 12.428 7.57902 12.6188 7.71967 12.7595C7.86032 12.9001 8.05109 12.9791 8.25 12.9791H13.94L12.22 14.6991C12.1463 14.7678 12.0872 14.8506 12.0462 14.9426C12.0052 15.0346 11.9832 15.1339 11.9814 15.2346C11.9796 15.3353 11.9982 15.4353 12.0359 15.5287C12.0736 15.6221 12.1297 15.7069 12.201 15.7782C12.2722 15.8494 12.357 15.9055 12.4504 15.9432C12.5438 15.981 12.6438 15.9995 12.7445 15.9977C12.8452 15.9959 12.9445 15.9739 13.0365 15.9329C13.1285 15.8919 13.2113 15.8328 13.28 15.7591L16.28 12.7591Z" fill="white"/>
            </svg>
        </a>
                    </div>
                </section>
                 <section class="featured-products pb100 ">
                         <div id="placement" class="placement pb60">
                         <div class="award-remark-moment">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="39" height="49" viewBox="0 0 39 49" fill="none">
<path d="M19.4757 1.02316L2.63015 2.92333C1.70171 3.02806 1 3.81337 1 4.7477V31.3892C1 31.6492 1.05339 31.9059 1.16592 32.1402C4.6513 39.3985 14.0732 45.3048 19.007 47.684C19.4394 47.8925 19.9369 47.9094 20.3849 47.7368C31.1157 43.603 36.6964 35.8398 38.3184 32.1071C38.411 31.8939 38.4531 31.6642 38.4531 31.4318V4.74859C38.4531 3.81388 37.7509 3.02838 36.822 2.92411L19.8863 1.02305C19.7499 1.00773 19.6121 1.00777 19.4757 1.02316Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M14.5 14.25C14.5 13.4544 14.8161 12.6913 15.3787 12.1287C15.9413 11.5661 16.7044 11.25 17.5 11.25H20.5C21.2956 11.25 22.0587 11.5661 22.6213 12.1287C23.1839 12.6913 23.5 13.4544 23.5 14.25V14.455C24.433 14.54 25.357 14.652 26.274 14.789C27.728 15.007 28.75 16.272 28.75 17.706V20.739C28.75 21.95 28.016 23.091 26.814 23.491C24.2938 24.3275 21.6554 24.7526 19 24.75C16.27 24.75 13.643 24.308 11.186 23.491C9.984 23.091 9.25 21.95 9.25 20.739V17.706C9.25 16.272 10.272 15.006 11.726 14.789C12.6473 14.6512 13.5723 14.5398 14.5 14.455V14.25ZM22 14.25V14.34C20.0018 14.2186 17.9982 14.2186 16 14.34V14.25C16 13.8522 16.158 13.4706 16.4393 13.1893C16.7206 12.908 17.1022 12.75 17.5 12.75H20.5C20.8978 12.75 21.2794 12.908 21.5607 13.1893C21.842 13.4706 22 13.8522 22 14.25ZM19 22.5C19.1989 22.5 19.3897 22.421 19.5303 22.2803C19.671 22.1397 19.75 21.9489 19.75 21.75C19.75 21.5511 19.671 21.3603 19.5303 21.2197C19.3897 21.079 19.1989 21 19 21C18.8011 21 18.6103 21.079 18.4697 21.2197C18.329 21.3603 18.25 21.5511 18.25 21.75C18.25 21.9489 18.329 22.1397 18.4697 22.2803C18.6103 22.421 18.8011 22.5 19 22.5Z" fill="#5CD1FF"/>
<path d="M10 27.4V24.604C10.2278 24.7287 10.4665 24.8324 10.713 24.914C13.3857 25.8014 16.1839 26.2525 19 26.25C21.892 26.25 24.68 25.782 27.287 24.915C27.539 24.831 27.777 24.726 28 24.604V27.4C28 28.852 26.953 30.128 25.477 30.323C23.357 30.605 21.195 30.75 19 30.75C16.834 30.7504 14.6702 30.6078 12.523 30.323C11.047 30.128 10 28.852 10 27.4Z" fill="#5CD1FF"/>
</svg>

                                                    <div class="remark-moment">Placement partners
                                                    </div>
                                                </div>
                        <div class="award-head pt12  w-100">
                            Launch your career with us
                        </div>
                        </div>
  <div class="featured-products-list-container">
    <ul class="featured-products-list">
         <t t-foreach="request.env['placement.section'].sudo().search([],)" t-as="placement">
      <li class="product-card">
        <div class="product-card-img">
          <img draggable="false" t-att-src="'/web/image?model=placement.section&amp;id=%s&amp;field=placement_image' % placement.id" alt=""/>
        </div>

      </li>
      </t>
    </ul>
  </div>
</section>
<section class="voice-sec home-voice mb170 scrolling" data-speed="auto">
                                    <div id="voice" class="pt100 pb60 voice">
                                        <div class="award-remark-moment">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="39" height="49" viewBox="0 0 39 49" fill="none">
                                                <path d="M19.4757 1.02316L2.63015 2.92333C1.70171 3.02806 1 3.81337 1 4.7477V31.3892C1 31.6492 1.05339 31.9059 1.16592 32.1402C4.6513 39.3985 14.0732 45.3048 19.007 47.684C19.4394 47.8925 19.9369 47.9094 20.3849 47.7368C31.1157 43.603 36.6964 35.8398 38.3184 32.1071C38.411 31.8939 38.4531 31.6642 38.4531 31.4318V4.74859C38.4531 3.81388 37.7509 3.02838 36.822 2.92411L19.8863 1.02305C19.7499 1.00773 19.6121 1.00777 19.4757 1.02316Z" fill="#CBF0FF" stroke="#5CD1FF" stroke-opacity="0.28" stroke-width="0.924769"/>
                                                <g clip-path="url(#clip0_559_2625)">
                                                    <path d="M16.0164 13.4908C15.3012 12.3624 13.5781 12.6624 13.2867 13.9659L11.8948 20.1758L10.263 21.2101C9.29925 21.8209 8.66057 23.0119 9.03606 24.2431C9.29268 25.0814 9.66108 25.8813 10.1313 26.6213C10.6121 27.3798 11.18 28.0498 11.8162 28.6257C12.768 29.4905 14.1181 29.4221 15.0819 28.8113L16.712 27.7781L22.9219 29.17C24.226 29.4622 25.2328 28.0321 24.5176 26.9036L16.0164 13.4908ZM20.8705 11.6526C20.9141 11.4587 21.0329 11.29 21.2007 11.1836C21.3686 11.0772 21.5719 11.0418 21.7658 11.0852C27.0202 12.2621 30.3249 17.4761 29.1471 22.731C29.0979 22.919 28.9777 23.0806 28.8117 23.1817C28.6458 23.2829 28.4471 23.3156 28.2574 23.2731C28.0678 23.2306 27.9021 23.1162 27.7952 22.9539C27.6882 22.7916 27.6485 22.5942 27.6843 22.4032C27.9213 21.3459 27.9478 20.2523 27.7621 19.1849C27.5765 18.1174 27.1824 17.0969 26.6024 16.1818C26.0224 15.2666 25.2677 14.4747 24.3816 13.8512C23.4955 13.2277 22.4952 12.7848 21.438 12.5479C21.2441 12.5043 21.0754 12.3856 20.969 12.2177C20.8626 12.0498 20.8272 11.8466 20.8705 11.6526Z" fill="#5CD1FF"/>
                                                    <path d="M20.0497 15.3112C20.0712 15.2151 20.1114 15.1241 20.1681 15.0435C20.2248 14.9629 20.2968 14.8943 20.3801 14.8415C20.4633 14.7888 20.5561 14.753 20.6532 14.7361C20.7502 14.7192 20.8497 14.7217 20.9458 14.7432C21.7148 14.9155 22.4423 15.2376 23.0867 15.691C23.7312 16.1445 24.28 16.7205 24.7019 17.3861C25.1238 18.0517 25.4104 18.7938 25.5454 19.5702C25.6804 20.3466 25.6611 21.1419 25.4887 21.9108C25.4423 22.1019 25.3226 22.2671 25.1556 22.3709C24.9885 22.4747 24.7874 22.5086 24.5955 22.4655C24.4037 22.4224 24.2364 22.3057 24.1297 22.1405C24.0231 21.9752 23.9856 21.7747 24.0254 21.5821C24.1546 21.0055 24.169 20.409 24.0678 19.8268C23.9665 19.2446 23.7516 18.688 23.4352 18.1889C23.1189 17.6898 22.7073 17.2578 22.224 16.9177C21.7407 16.5777 21.1952 16.3361 20.6185 16.2069C20.4246 16.1633 20.2559 16.0445 20.1495 15.8766C20.0431 15.7087 20.0077 15.5055 20.051 15.3115L20.0497 15.3112Z" fill="#5CD1FF"/>
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_559_2625">
                                                        <rect width="24" height="24" fill="white" transform="translate(2.44019 17.2884) rotate(-32.3668)"/>
                                                    </clipPath>
                                                </defs>
                                            </svg>


                                            <div class="remark-moment">Experience meets impact
                                            </div>
                                        </div>
                                        <div class="programme_head ">
                                        <div class="award-head pt12 w-100">
                                            Voice of our students
                                        </div>
                                         <button class=" prev-back" id="prevbtn">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.71991 11.47C7.57946 11.6106 7.50057 11.8012 7.50057 12C7.50057 12.1987 7.57946 12.3893 7.71991 12.53L15.2199 20.03C15.3621 20.1625 15.5501 20.2346 15.7444 20.2311C15.9387 20.2277 16.1241 20.149 16.2615 20.0116C16.3989 19.8742 16.4777 19.6888 16.4811 19.4945C16.4845 19.3002 16.4124 19.1121 16.2799 18.97L9.30991 12L16.2799 5.02997C16.4124 4.88779 16.4845 4.69975 16.4811 4.50545C16.4777 4.31114 16.3989 4.12576 16.2615 3.98835C16.1241 3.85093 15.9387 3.77222 15.7444 3.76879C15.5501 3.76537 15.3621 3.83749 15.2199 3.96997L7.71991 11.47Z" fill="white"/>
</svg></button>
                                    <button class=" next-move" id="nextbtn">
                                     <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M16.2801 11.47C16.4205 11.6106 16.4994 11.8012 16.4994 12C16.4994 12.1987 16.4205 12.3893 16.2801 12.53L8.78009 20.03C8.63792 20.1625 8.44987 20.2346 8.25557 20.2311C8.06127 20.2277 7.87588 20.149 7.73847 20.0116C7.60106 19.8742 7.52234 19.6888 7.51892 19.4945C7.51549 19.3002 7.58761 19.1121 7.72009 18.97L14.6901 12L7.72009 5.02997C7.58761 4.88779 7.51549 4.69975 7.51892 4.50545C7.52234 4.31114 7.60106 4.12576 7.73847 3.98835C7.87588 3.85093 8.06127 3.77222 8.25557 3.76879C8.44987 3.76537 8.63792 3.83749 8.78009 3.96997L16.2801 11.47Z" fill="white"/>
</svg>
                                    </button>
                                        </div>
                                    </div>
                                    <style>
                                        .notizia{
                                        opacity: 0;
    visibility: hidden;
    transition: all 1s;
    transition-delay: .1s;
    transform: translateY(50%);
                                        }
                                        .programme_head{
                                        position: relative;
                                        }
                                        .voice-sec .prev-back, .voice-sec .next-move {
                                        top:50%;
                                        transform: translateY(-50%);
                                        }
                                        .vector4{
                                            z-index: -1;
                                        }
                                        .announcement-items{
                                        animation:none;
                                        overflow:hidden;
                                        }
                                        .feature-img{
                                            opacity: 0;
                                            visibility: hidden;
                                            transition: all 0.4s;
                                            transition-delay: .1s;
                                           opacity:0.3;
                                        }
                                        .feature-img.inview {
                                            visibility: visible;
                                            opacity:1;
                                        }
                                        .our-feature{
                                        background:none;
                                            overflow: hidden;
    background-color: #032e3f;
                                        }
                                        .feature-item, .feature-item2, .feature-item3, .feature-item4{
                                            opacity: 0;
    transition: all 2s;
    transition-delay: .1s;
    transform: translateY(20%);
        z-index: 3;
    }
    .feature-item.inview, .feature-item2.inview, .feature-item3.inview, .feature-item4.inview, .notizia.inview{
        opacity: 1;
    visibility: visible;
    transform: translateY(0%);

    }
    .student,
.collection,
.landing-page-head,
.landing-landing-para,
.landing_page_btn,
.about1,
.about2,
.about3,
.about-sec-detail,
.video-content,
.programmes,
.programme,
.feature,
.latest,
.admission-open,
.placement,
.featured-products-list,
.wrapping,
.voice,
.feature-img,
.feature-item,
.feature-item2,
.feature-item3,
.feature-item4,
.notizia {
    transition: all 2s;
    transition-delay: 0.2s;
}

                                        }
                                    </style>
                                    <img src="/cpa/static/img/vector4.svg" class="vector4"/>
                                    <div class="wrapping">
                                         <t t-foreach="request.env['student.voice'].sudo().search([],)" t-as="voice">
                                        <div class="voicebox" id="voice-cards">

                                                <img t-att-src="'/web/image?model=student.voice&amp;id=%s&amp;field=student_image' % voice.id" class="student-img"/>
                                                <div class="student_details">
                                                <div class="student-title" t-esc="voice.student_name"/>
                                                <div class="batch" t-esc="voice.batch"/>
                                            </div>
                                            <div class="student-para" t-esc="voice.student_description">....</div>
                                        </div>

                                        </t>



                                    </div>

                                </section>

               <script>
document.addEventListener('DOMContentLoaded', function () {
    // ✅ Always clean .inview classes from HTML
    document.querySelectorAll('.inview').forEach(el =&gt; el.classList.remove('inview'));

    // ❌ Don't run animation logic in Odoo Website Editor
    if (window.odoo &amp;&amp; window.odoo.is_editor) {
        return;
    }

    // ✅ IntersectionObserver logic
    const elementsToObserve = [
        '.student',
        '.collection',
        '.landing-page-head',
        '.landing-landing-para',
        '.landing_page_btn',
        '.about1',
        '.about2',
        '.about3',
        '.about-sec-detail',
        '.video-content',
        '.programmes',
        '.programme',
        '.feature',
        '.latest',
        '.admission-open',
        '.placement',
        '.featured-products-list',
        '.wrapping',
        '.voice',
        '.feature-img',
        '.feature-item',
        '.feature-item2',
        '.feature-item3',
        '.feature-item4',
        '.notizia'
    ].map(selector =&gt; document.querySelector(selector)).filter(Boolean);

    const onEntry = function (entries, observer) {
        entries.forEach(entry =&gt; {
            if (entry.isIntersecting) {
                entry.target.classList.add('inview');
            }
        });
    };

    const observer = new IntersectionObserver(onEntry, { threshold: 0.2 });

    elementsToObserve.forEach(el =&gt; observer.observe(el));
});
</script>

<!--Placement Script-->
<script>
const homewrapper = document.querySelector(".featured-products-list");

const homeboxes = gsap.utils.toArray(".product-card");


const loop = horizontalLoop(homeboxes, { paused: false, draggable: true, repeat: -1 });

document
.querySelector(".featured-products-list")
.addEventListener("mouseenter", () =&gt;
loop.pause()
);

document
.querySelector(".featured-products-list")
.addEventListener("mouseleave", () =&gt;
loop.play()
);

document
  .querySelector(".next")
  .addEventListener("click", () =&gt;
    loop.next({ duration: 0.4, ease: "power1.inOut" })
  );
document
  .querySelector(".prev")
  .addEventListener("click", () =&gt;
    loop.previous({ duration: 0.4, ease: "power1.inOut" })
  );


/*
This helper function makes a group of elements animate along the x-axis in a seamless, responsive loop.

Features:
- Uses xPercent so that even if the widths change (like if the window gets resized), it should still work in most cases.
- When each item animates to the left or right enough, it will loop back to the other side
- Optionally pass in a config object with values like draggable: true, speed (default: 1, which travels at roughly 100 pixels per second), paused (boolean), repeat, reversed, and paddingRight.
- The returned timeline will have the following methods added to it:
- next() - animates to the next element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.
- previous() - animates to the previous element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.
- toIndex() - pass in a zero-based index value of the element that it should animate to, and optionally pass in a vars object to control duration, easing, etc. Always goes in the shortest direction
- current() - returns the current index (if an animation is in-progress, it reflects the final index)
- times - an Array of the times on the timeline where each element hits the "starting" spot. There's also a label added accordingly, so "label1" is when the 2nd element reaches the start.
*/
function horizontalLoop(items, config) {
items = gsap.utils.toArray(items);
config = config || {};
let tl = gsap.timeline({
repeat: config.repeat,
paused: config.paused,
defaults: { ease: "none" },
onReverseComplete: () =&gt; tl.totalTime(tl.rawTime() + tl.duration() * 100)
}),
length = items.length,
startX = items[0].offsetLeft - 20,
times = [],
widths = [],
xPercents = [],
curIndex = 0,
pixelsPerSecond = (config.speed || 1) * 100,
snap = config.snap === false ? (v) =&gt; v : gsap.utils.snap(config.snap || 1), // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural
populateWidths = () =&gt;
items.forEach((el, i) =&gt; {
widths[i] = parseFloat(gsap.getProperty(el, "width", "px"));
xPercents[i] = snap(
(parseFloat(gsap.getProperty(el, "x", "px")) / widths[i]) * 100 +
gsap.getProperty(el, "xPercent")
);
}),
getTotalWidth = () =&gt;
items[length - 1].offsetLeft +
(xPercents[length - 1] / 100) * widths[length - 1] -
startX +
items[length - 1].offsetWidth *
gsap.getProperty(items[length - 1], "scaleX") +
(parseFloat(config.paddingRight) || 0),
totalWidth,
curX,
distanceToStart,
distanceToLoop,
item,
i;
populateWidths();
gsap.set(items, {
// convert "x" to "xPercent" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.
xPercent: (i) =&gt; xPercents[i]
});
gsap.set(items, { x: 0 });
totalWidth = getTotalWidth();
for (i = 0; i &lt; length; i++) {
item = items[i];
curX = (xPercents[i] / 100) * widths[i];
distanceToStart = item.offsetLeft + curX - startX;
distanceToLoop =
distanceToStart + widths[i] * gsap.getProperty(item, "scaleX");
tl.to(
item,
{
xPercent: snap(((curX - distanceToLoop) / widths[i]) * 100),
duration: distanceToLoop / pixelsPerSecond
},
0
)
.fromTo(
item,
{
xPercent: snap(
((curX - distanceToLoop + totalWidth) / widths[i]) * 100
)
},
{
xPercent: xPercents[i],
duration:
(curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond,
immediateRender: false
},
distanceToLoop / pixelsPerSecond
)
.add("label" + i, distanceToStart / pixelsPerSecond);
times[i] = distanceToStart / pixelsPerSecond;
}
function toIndex(index, vars) {
vars = vars || {};
Math.abs(index - curIndex) &gt; length / 2 &amp;&amp;
(index += index &gt; curIndex ? -length : length); // always go in the shortest direction
let newIndex = gsap.utils.wrap(0, length, index),
time = times[newIndex];
if (time &gt; tl.time() !== index &gt; curIndex) {
// if we're wrapping the timeline's playhead, make the proper adjustments
vars.modifiers = { time: gsap.utils.wrap(0, tl.duration()) };
time += tl.duration() * (index &gt; curIndex ? 1 : -1);
}
curIndex = newIndex;
vars.overwrite = true;
return tl.tweenTo(time, vars);
}
tl.next = (vars) =&gt; {
toIndex(curIndex + 1, vars);
};
tl.previous = (vars) =&gt; {
toIndex(curIndex - 1, vars);
};
tl.current = () =&gt; curIndex;
tl.toIndex = (index, vars) =&gt; toIndex(index, vars);
tl.updateIndex = () =&gt; (curIndex = Math.round(tl.progress() * items.length));
tl.times = times;
tl.progress(1, true).progress(0, true); // pre-render for performance
if (config.reversed) {
tl.vars.onReverseComplete();
tl.reverse();
}
if (config.draggable &amp;&amp; typeof Draggable === "function") {
let proxy = document.createElement("div"),
wrap = gsap.utils.wrap(0, 1),
ratio,
startProgress,
draggable,
dragSnap,
roundFactor,
align = () =&gt;
tl.progress(
wrap(startProgress + (draggable.startX - draggable.x) * ratio)
),
syncIndex = () =&gt; tl.updateIndex();
typeof InertiaPlugin === "undefined" &amp;&amp;
console.warn(
"InertiaPlugin required for momentum-based scrolling and snapping. https://greensock.com/club"
);
draggable = Draggable.create(proxy, {
trigger: 'items[0].parentNode',
type: "x",
onPress() {
startProgress = tl.progress();
tl.progress(0);
populateWidths();
totalWidth = getTotalWidth();
ratio = 1 / totalWidth;
dragSnap = totalWidth / items.length;
roundFactor = Math.pow(
10,
((dragSnap + "").split(".")[1] || "").length
);
tl.progress(startProgress);
},
onDrag: align,
onThrowUpdate: align,
inertia: true,
snap: (value) =&gt; {
let n =
Math.round(parseFloat(value) / dragSnap) * dragSnap * roundFactor;
return (n - (n % 1)) / roundFactor;
},
onRelease: syncIndex,
onThrowComplete: () =&gt;
gsap.set(proxy, { x: 0 }) &amp;&amp; syncIndex() &amp;&amp; setMiddle(tl.current() + 2) //Find the middle item and toggle Class
})[0];

tl.draggable = draggable;
}

return tl;
}

</script>

<!--voice Script-->
 <script>
const wrapping = document.querySelector(".wrapping");
const voicebox = gsap.utils.toArray(".voicebox");

gsap.registerPlugin(Draggable,InertiaPlugin);

const looping = horizontalLoop(voicebox, {
  repeat: -1,
  draggable: true,
  speed: 0.4
});

document
  .querySelector(".wrapping")
  .addEventListener("mouseenter", () =&gt;
    looping.pause()
  );

document
  .querySelector(".wrapping")
  .addEventListener("mouseleave", () =&gt;
    looping.play()
  );

document
  .querySelector(".next-move")
  .addEventListener("click", () =&gt;
    looping.next({ duration: 0.4, ease: "power1.inOut" })
  );
document
  .querySelector(".prev-back")
  .addEventListener("click", () =&gt; {
    looping.previous({ duration: 0.4, ease: "power1.inOut" });
                    console.log(loop.current())}
  );


// This helper function makes a group of elements animate along the x-axis in a seamless, responsive loop.

// Features:
//  - Uses xPercent so that even if the widths change (like if the window gets resized), it should still work in most cases.
//  - When each item animates to the left or right enough, it will loop back to the other side
//  - Optionally pass in a config object with values like draggable: true, center: true, speed (default: 1, which travels at roughly 100 pixels per second), paused (boolean), repeat, reversed, and paddingRight.
//  - The returned timeline will have the following methods added to it:
//    - next() - animates to the next element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.
//    - previous() - animates to the previous element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.
//    - toIndex() - pass in a zero-based index value of the element that it should animate to, and optionally pass in a vars object to control duration, easing, etc. Always goes in the shortest direction
//    - current() - returns the current index (if an animation is in-progress, it reflects the final index)
//    - times - an Array of the times on the timeline where each element hits the "starting" spot.

function horizontalLoop(items, config) {
  items = gsap.utils.toArray(items);
  config = config || {};
  let onChange = config.onChange,
    lastIndex = 0,
    tl = gsap.timeline({repeat: config.repeat, onUpdate: onChange &amp;&amp; function() {
        let i = tl.closestIndex();
        if (lastIndex !== i) {
          lastIndex = i;
          onChange(items[i], i);
        }
      }, paused: config.paused, defaults: {ease: "none"}, onReverseComplete: () =&gt; tl.totalTime(tl.rawTime() + tl.duration() * 100)}),
    length = items.length,
    startX = items[0].offsetLeft - 32,
    times = [],
    widths = [],
    spaceBefore = [],
    xPercents = [],
    curIndex = 0,
    indexIsDirty = false,
    center = config.center,
    pixelsPerSecond = (config.speed || 1) * 100,
    snap = config.snap === false ? v =&gt; v : gsap.utils.snap(config.snap || 1), // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural
    timeOffset = 0,
    container = center === true ? items[0].parentNode : gsap.utils.toArray(center)[0] || items[0].parentNode,
    totalWidth,
    getTotalWidth = () =&gt; items[length-1].offsetLeft + xPercents[length-1] / 100 * widths[length-1] - startX + spaceBefore[0] + items[length-1].offsetWidth * gsap.getProperty(items[length-1], "scaleX") + (parseFloat(config.paddingRight) || 0),
    populateWidths = () =&gt; {
      let b1 = container.getBoundingClientRect(), b2;
      items.forEach((el, i) =&gt; {
        widths[i] = parseFloat(gsap.getProperty(el, "width", "px"));
        xPercents[i] = snap(parseFloat(gsap.getProperty(el, "x", "px")) / widths[i] * 100 + gsap.getProperty(el, "xPercent"));
        b2 = el.getBoundingClientRect();
        spaceBefore[i] = b2.left - (i ? b1.right : b1.left);
        b1 = b2;
      });
      gsap.set(items, { // convert "x" to "xPercent" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.
        xPercent: i =&gt; xPercents[i]
      });
      totalWidth = getTotalWidth();
    },
    timeWrap,
    populateOffsets = () =&gt; {
      timeOffset = center ? tl.duration() * (container.offsetWidth / 2) / totalWidth : 0;
      center &amp;&amp; times.forEach((t, i) =&gt; {
        times[i] = timeWrap(tl.labels["label" + i] + tl.duration() * widths[i] / 2 / totalWidth - timeOffset);
      });
    },
    getClosest = (values, value, wrap) =&gt; {
      let i = values.length,
        closest = 1e10,
        index = 0, d;
      while (i--) {
        d = Math.abs(values[i] - value);
        if (d &gt; wrap / 2) {
          d = wrap - d;
        }
        if (d &lt; closest) {
          closest = d;
          index = i;
        }
      }
      return index;
    },
    populateTimeline = () =&gt; {
      let i, item, curX, distanceToStart, distanceToLoop;
      tl.clear();
      for (i = 0; i &lt; length; i++) {
        item = items[i];
        curX = xPercents[i] / 100 * widths[i];
        distanceToStart = item.offsetLeft + curX - startX + spaceBefore[0];
        distanceToLoop = distanceToStart + widths[i] * gsap.getProperty(item, "scaleX");
        tl.to(item, {xPercent: snap((curX - distanceToLoop) / widths[i] * 100), duration: distanceToLoop / pixelsPerSecond}, 0)
          .fromTo(item, {xPercent: snap((curX - distanceToLoop + totalWidth) / widths[i] * 100)}, {xPercent: xPercents[i], duration: (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond, immediateRender: false}, distanceToLoop / pixelsPerSecond)
          .add("label" + i, distanceToStart / pixelsPerSecond);
        times[i] = distanceToStart / pixelsPerSecond;
      }
      timeWrap = gsap.utils.wrap(0, tl.duration());
    },
    refresh = (deep) =&gt; {
      let progress = tl.progress();
      tl.progress(0, true);
      populateWidths();
      deep &amp;&amp; populateTimeline();
      populateOffsets();
      deep &amp;&amp; tl.draggable ? tl.time(times[curIndex], true) : tl.progress(progress, true);
    },
    proxy;
  gsap.set(items, {x: 0});
  populateWidths();
  populateTimeline();
  populateOffsets();
  window.addEventListener("resize", () =&gt; refresh(true));
  function toIndex(index, vars) {
    vars = vars || {};
    (Math.abs(index - curIndex) &gt; length / 2) &amp;&amp; (index += index &gt; curIndex ? -length : length); // always go in the shortest direction
    let newIndex = gsap.utils.wrap(0, length, index),
      time = times[newIndex];
    if (time &gt; tl.time() !== index &gt; curIndex &amp;&amp; index !== curIndex) { // if we're wrapping the timeline's playhead, make the proper adjustments
      time += tl.duration() * (index &gt; curIndex ? 1 : -1);
    }
    if (time &lt; 0 || time &gt; tl.duration()) {
      vars.modifiers = {time: timeWrap};
    }
    curIndex = newIndex;
    vars.overwrite = true;
    gsap.killTweensOf(proxy);
    return vars.duration === 0 ? tl.time(timeWrap(time)) : tl.tweenTo(time, vars);
  }
  tl.toIndex = (index, vars) =&gt; toIndex(index, vars);
  tl.closestIndex = setCurrent =&gt; {
    let index = getClosest(times, tl.time(), tl.duration());
    if (setCurrent) {
      curIndex = index;
      indexIsDirty = false;
    }
    return index;
  };
  tl.current = () =&gt; indexIsDirty ? tl.closestIndex(true) : curIndex;
  tl.next = vars =&gt; toIndex(tl.current()+1, vars);
  tl.previous = vars =&gt; toIndex(tl.current()-1, vars);
  tl.times = times;
  tl.progress(1, true).progress(0, true); // pre-render for performance
  if (config.reversed) {
    tl.vars.onReverseComplete();
    tl.reverse();
  }
  if (config.draggable &amp;&amp; typeof(Draggable) === "function") {
    proxy = document.createElement("div")
    let wrap = gsap.utils.wrap(0, 1),
      ratio, startProgress, draggable, dragSnap, lastSnap, initChangeX,
      align = () =&gt; tl.progress(wrap(startProgress + (draggable.startX - draggable.x) * ratio)),
      syncIndex = () =&gt; tl.closestIndex(true);
    typeof(InertiaPlugin) === "undefined" &amp;&amp; console.warn("InertiaPlugin required for momentum-based scrolling and snapping. https://greensock.com/club");
    draggable = Draggable.create(proxy, {
      trigger: items[0].parentNode,
      type: "x",
      onPressInit() {
        let x = this.x;
        gsap.killTweensOf(tl);
        startProgress = tl.progress();
        refresh();
        ratio = 1 / totalWidth;
        initChangeX = (startProgress / -ratio) - x;
        gsap.set(proxy, {x: startProgress / -ratio});
      },
      onDrag: align,
      onThrowUpdate: align,
      overshootTolerance: 0,
      inertia: true,
      snap(value) {
        //note: if the user presses and releases in the middle of a throw, due to the sudden correction of proxy.x in the onPressInit(), the velocity could be very large, throwing off the snap. So sense that condition and adjust for it. We also need to set overshootTolerance to 0 to prevent the inertia from causing it to shoot past and come back
        if (Math.abs(startProgress / -ratio - this.x) &lt; 10) {
          return lastSnap + initChangeX
        }
        let time = -(value * ratio) * tl.duration(),
          wrappedTime = timeWrap(time),
          snapTime = times[getClosest(times, wrappedTime, tl.duration())],
          dif = snapTime - wrappedTime;
        Math.abs(dif) &gt; tl.duration() / 2 &amp;&amp; (dif += dif &lt; 0 ? tl.duration() : -tl.duration());
        lastSnap = (time + dif) / tl.duration() / -ratio;
        return lastSnap;
      },
      onRelease() {
        syncIndex();
        draggable.isThrowing &amp;&amp; (indexIsDirty = true);
      },
      onThrowComplete: syncIndex
    })[0];
    tl.draggable = draggable;
  }
  tl.closestIndex(true);
  lastIndex = curIndex;
  onChange &amp;&amp; onChange(items[curIndex], curIndex);
  return tl;
}
 </script>

<!--Circle rounding-->
<script>
    document.addEventListener("DOMContentLoaded", function () {
    setTimeout(() =&gt; {
    gsap.to(".rounded", {
    rotation: 35,
    duration: 2.5,
    ease: "sine.inOut",
    yoyo: true,
    repeat: -1,
    repeatDelay: 1.5, // ⏸️ pause before switching direction
    transformOrigin: "50% 50%"
    });
    }, 2); // Start after 2ms
    });
</script>
<!--    Latest Newses   -->
 <script>
const moving = document.querySelector(".latest_newses");
const newsbox = gsap.utils.toArray(".announce-item");

gsap.registerPlugin(Draggable,InertiaPlugin);

const loopon = horizontalLoop(newsbox, {
  repeat: -1,
  draggable: true,
  speed: 0.7
});

document
  .querySelector(".latest_newses")
  .addEventListener("mouseenter", () =&gt;
    loopon.pause()
  );

document
  .querySelector(".latest_newses")
  .addEventListener("mouseleave", () =&gt;
    loopon.play()
  );
  document
  .querySelector(".next-move")
  .addEventListener("click", () =&gt;
    loopon.next({ duration: 0.4, ease: "power1.inOut" })
  );
document
  .querySelector(".prev-back")
  .addEventListener("click", () =&gt; {
    loopon.previous({ duration: 0.4, ease: "power1.inOut" });
                    console.log(loopon.current())}
  );

// This helper function makes a group of elements animate along the x-axis in a seamless, responsive loop.

// Features:
//  - Uses xPercent so that even if the widths change (like if the window gets resized), it should still work in most cases.
//  - When each item animates to the left or right enough, it will loop back to the other side
//  - Optionally pass in a config object with values like draggable: true, center: true, speed (default: 1, which travels at roughly 100 pixels per second), paused (boolean), repeat, reversed, and paddingRight.
//  - The returned timeline will have the following methods added to it:
//    - next() - animates to the next element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.
//    - previous() - animates to the previous element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.
//    - toIndex() - pass in a zero-based index value of the element that it should animate to, and optionally pass in a vars object to control duration, easing, etc. Always goes in the shortest direction
//    - current() - returns the current index (if an animation is in-progress, it reflects the final index)
//    - times - an Array of the times on the timeline where each element hits the "starting" spot.

function horizontalLoop(items, config) {
  items = gsap.utils.toArray(items);
  config = config || {};
  let onChange = config.onChange,
    lastIndex = 0,
    tl = gsap.timeline({repeat: config.repeat, onUpdate: onChange &amp;&amp; function() {
        let i = tl.closestIndex();
        if (lastIndex !== i) {
          lastIndex = i;
          onChange(items[i], i);
        }
      }, paused: config.paused, defaults: {ease: "none"}, onReverseComplete: () =&gt; tl.totalTime(tl.rawTime() + tl.duration() * 100)}),
    length = items.length,
    startX = items[0].offsetLeft - 32,
    times = [],
    widths = [],
    spaceBefore = [],
    xPercents = [],
    curIndex = 0,
    indexIsDirty = false,
    center = config.center,
    pixelsPerSecond = (config.speed || 1) * 100,
    snap = config.snap === false ? v =&gt; v : gsap.utils.snap(config.snap || 1), // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural
    timeOffset = 0,
    container = center === true ? items[0].parentNode : gsap.utils.toArray(center)[0] || items[0].parentNode,
    totalWidth,
    getTotalWidth = () =&gt; items[length-1].offsetLeft + xPercents[length-1] / 100 * widths[length-1] - startX + spaceBefore[0] + items[length-1].offsetWidth * gsap.getProperty(items[length-1], "scaleX") + (parseFloat(config.paddingRight) || 0),
    populateWidths = () =&gt; {
      let b1 = container.getBoundingClientRect(), b2;
      items.forEach((el, i) =&gt; {
        widths[i] = parseFloat(gsap.getProperty(el, "width", "px"));
        xPercents[i] = snap(parseFloat(gsap.getProperty(el, "x", "px")) / widths[i] * 100 + gsap.getProperty(el, "xPercent"));
        b2 = el.getBoundingClientRect();
        spaceBefore[i] = b2.left - (i ? b1.right : b1.left);
        b1 = b2;
      });
      gsap.set(items, { // convert "x" to "xPercent" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.
        xPercent: i =&gt; xPercents[i]
      });
      totalWidth = getTotalWidth();
    },
    timeWrap,
    populateOffsets = () =&gt; {
      timeOffset = center ? tl.duration() * (container.offsetWidth / 2) / totalWidth : 0;
      center &amp;&amp; times.forEach((t, i) =&gt; {
        times[i] = timeWrap(tl.labels["label" + i] + tl.duration() * widths[i] / 2 / totalWidth - timeOffset);
      });
    },
    getClosest = (values, value, wrap) =&gt; {
      let i = values.length,
        closest = 1e10,
        index = 0, d;
      while (i--) {
        d = Math.abs(values[i] - value);
        if (d &gt; wrap / 2) {
          d = wrap - d;
        }
        if (d &lt; closest) {
          closest = d;
          index = i;
        }
      }
      return index;
    },
    populateTimeline = () =&gt; {
      let i, item, curX, distanceToStart, distanceToLoop;
      tl.clear();
      for (i = 0; i &lt; length; i++) {
        item = items[i];
        curX = xPercents[i] / 100 * widths[i];
        distanceToStart = item.offsetLeft + curX - startX + spaceBefore[0];
        distanceToLoop = distanceToStart + widths[i] * gsap.getProperty(item, "scaleX");
        tl.to(item, {xPercent: snap((curX - distanceToLoop) / widths[i] * 100), duration: distanceToLoop / pixelsPerSecond}, 0)
          .fromTo(item, {xPercent: snap((curX - distanceToLoop + totalWidth) / widths[i] * 100)}, {xPercent: xPercents[i], duration: (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond, immediateRender: false}, distanceToLoop / pixelsPerSecond)
          .add("label" + i, distanceToStart / pixelsPerSecond);
        times[i] = distanceToStart / pixelsPerSecond;
      }
      timeWrap = gsap.utils.wrap(0, tl.duration());
    },
    refresh = (deep) =&gt; {
      let progress = tl.progress();
      tl.progress(0, true);
      populateWidths();
      deep &amp;&amp; populateTimeline();
      populateOffsets();
      deep &amp;&amp; tl.draggable ? tl.time(times[curIndex], true) : tl.progress(progress, true);
    },
    proxy;
  gsap.set(items, {x: 0});
  populateWidths();
  populateTimeline();
  populateOffsets();
  window.addEventListener("resize", () =&gt; refresh(true));
  function toIndex(index, vars) {
    vars = vars || {};
    (Math.abs(index - curIndex) &gt; length / 2) &amp;&amp; (index += index &gt; curIndex ? -length : length); // always go in the shortest direction
    let newIndex = gsap.utils.wrap(0, length, index),
      time = times[newIndex];
    if (time &gt; tl.time() !== index &gt; curIndex &amp;&amp; index !== curIndex) { // if we're wrapping the timeline's playhead, make the proper adjustments
      time += tl.duration() * (index &gt; curIndex ? 1 : -1);
    }
    if (time &lt; 0 || time &gt; tl.duration()) {
      vars.modifiers = {time: timeWrap};
    }
    curIndex = newIndex;
    vars.overwrite = true;
    gsap.killTweensOf(proxy);
    return vars.duration === 0 ? tl.time(timeWrap(time)) : tl.tweenTo(time, vars);
  }
  tl.toIndex = (index, vars) =&gt; toIndex(index, vars);
  tl.closestIndex = setCurrent =&gt; {
    let index = getClosest(times, tl.time(), tl.duration());
    if (setCurrent) {
      curIndex = index;
      indexIsDirty = false;
    }
    return index;
  };
  tl.current = () =&gt; indexIsDirty ? tl.closestIndex(true) : curIndex;
  tl.next = vars =&gt; toIndex(tl.current()+1, vars);
  tl.previous = vars =&gt; toIndex(tl.current()-1, vars);
  tl.times = times;
  tl.progress(1, true).progress(0, true); // pre-render for performance
  if (config.reversed) {
    tl.vars.onReverseComplete();
    tl.reverse();
  }
  if (config.draggable &amp;&amp; typeof(Draggable) === "function") {
    proxy = document.createElement("div")
    let wrap = gsap.utils.wrap(0, 1),
      ratio, startProgress, draggable, dragSnap, lastSnap, initChangeX,
      align = () =&gt; tl.progress(wrap(startProgress + (draggable.startX - draggable.x) * ratio)),
      syncIndex = () =&gt; tl.closestIndex(true);
    typeof(InertiaPlugin) === "undefined" &amp;&amp; console.warn("InertiaPlugin required for momentum-based scrolling and snapping. https://greensock.com/club");
    draggable = Draggable.create(proxy, {
      trigger: items[0].parentNode,
      type: "x",
      onPressInit() {
        let x = this.x;
        gsap.killTweensOf(tl);
        startProgress = tl.progress();
        refresh();
        ratio = 1 / totalWidth;
        initChangeX = (startProgress / -ratio) - x;
        gsap.set(proxy, {x: startProgress / -ratio});
      },
      onDrag: align,
      onThrowUpdate: align,
      overshootTolerance: 0,
      inertia: true,
      snap(value) {
        //note: if the user presses and releases in the middle of a throw, due to the sudden correction of proxy.x in the onPressInit(), the velocity could be very large, throwing off the snap. So sense that condition and adjust for it. We also need to set overshootTolerance to 0 to prevent the inertia from causing it to shoot past and come back
        if (Math.abs(startProgress / -ratio - this.x) &lt; 10) {
          return lastSnap + initChangeX
        }
        let time = -(value * ratio) * tl.duration(),
          wrappedTime = timeWrap(time),
          snapTime = times[getClosest(times, wrappedTime, tl.duration())],
          dif = snapTime - wrappedTime;
        Math.abs(dif) &gt; tl.duration() / 2 &amp;&amp; (dif += dif &lt; 0 ? tl.duration() : -tl.duration());
        lastSnap = (time + dif) / tl.duration() / -ratio;
        return lastSnap;
      },
      onRelease() {
        syncIndex();
        draggable.isThrowing &amp;&amp; (indexIsDirty = true);
      },
      onThrowComplete: syncIndex
    })[0];
    tl.draggable = draggable;
  }
  tl.closestIndex(true);
  lastIndex = curIndex;
  onChange &amp;&amp; onChange(items[curIndex], curIndex);
  return tl;
}
 </script>
 <!--    News Letter   -->
                <script>
                    const newswrapper = document.querySelector(".news-wrapper");
                    const newsletter = gsap.utils.toArray(".news-letter-box");

                    gsap.registerPlugin(Draggable,InertiaPlugin);

                    const loopnews = horizontalLoop(newsletter, {
                    repeat: -1,
                    draggable: true,
                    speed: 0.7
                    });

                    document
                    .querySelector(".news-wrapper")
                    .addEventListener("mouseenter", () =&gt;
                    loopnews.pause()
                    );

                    document
                    .querySelector(".news-wrapper")
                    .addEventListener("mouseleave", () =&gt;
                    loopnews.play()
                    );
                    document

                    // This helper function makes a group of elements animate along the x-axis in a seamless, responsive
                    loop.

                    // Features:
                    // - Uses xPercent so that even if the widths change (like if the window gets resized), it should
                    still work in most cases.
                    // - When each item animates to the left or right enough, it will loop back to the other side
                    // - Optionally pass in a config object with values like draggable: true, center: true, speed
                    (default: 1, which travels at roughly 100 pixels per second), paused (boolean), repeat, reversed,
                    and paddingRight.
                    // - The returned timeline will have the following methods added to it:
                    // - next() - animates to the next element using a timeline.tweenTo() which it returns. You can pass
                    in a vars object to control duration, easing, etc.
                    // - previous() - animates to the previous element using a timeline.tweenTo() which it returns. You
                    can pass in a vars object to control duration, easing, etc.
                    // - toIndex() - pass in a zero-based index value of the element that it should animate to, and
                    optionally pass in a vars object to control duration, easing, etc. Always goes in the shortest
                    direction
                    // - current() - returns the current index (if an animation is in-progress, it reflects the final
                    index)
                    // - times - an Array of the times on the timeline where each element hits the "starting" spot.

                    function horizontalLoop(items, config) {
                    items = gsap.utils.toArray(items);
                    config = config || {};
                    let onChange = config.onChange,
                    lastIndex = 0,
                    tl = gsap.timeline({repeat: config.repeat, onUpdate: onChange &amp;&amp; function() {
                    let i = tl.closestIndex();
                    if (lastIndex !== i) {
                    lastIndex = i;
                    onChange(items[i], i);
                    }
                    }, paused: config.paused, defaults: {ease: "none"}, onReverseComplete: () =&gt;
                    tl.totalTime(tl.rawTime() + tl.duration() * 100)}),
                    length = items.length,
                    startX = items[0].offsetLeft - 32,
                    times = [],
                    widths = [],
                    spaceBefore = [],
                    xPercents = [],
                    curIndex = 0,
                    indexIsDirty = false,
                    center = config.center,
                    pixelsPerSecond = (config.speed || 1) * 100,
                    snap = config.snap === false ? v =&gt; v : gsap.utils.snap(config.snap || 1), // some browsers shift
                    by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width
                    might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to
                    make things look more natural
                    timeOffset = 0,
                    container = center === true ? items[0].parentNode : gsap.utils.toArray(center)[0] ||
                    items[0].parentNode,
                    totalWidth,
                    getTotalWidth = () =&gt; items[length-1].offsetLeft + xPercents[length-1] / 100 * widths[length-1] -
                    startX + spaceBefore[0] + items[length-1].offsetWidth * gsap.getProperty(items[length-1], "scaleX")
                    + (parseFloat(config.paddingRight) || 0),
                    populateWidths = () =&gt; {
                    let b1 = container.getBoundingClientRect(), b2;
                    items.forEach((el, i) =&gt; {
                    widths[i] = parseFloat(gsap.getProperty(el, "width", "px"));
                    xPercents[i] = snap(parseFloat(gsap.getProperty(el, "x", "px")) / widths[i] * 100 +
                    gsap.getProperty(el, "xPercent"));
                    b2 = el.getBoundingClientRect();
                    spaceBefore[i] = b2.left - (i ? b1.right : b1.left);
                    b1 = b2;
                    });
                    gsap.set(items, { // convert "x" to "xPercent" to make things responsive, and populate the
                    widths/xPercents Arrays to make lookups faster.
                    xPercent: i =&gt; xPercents[i]
                    });
                    totalWidth = getTotalWidth();
                    },
                    timeWrap,
                    populateOffsets = () =&gt; {
                    timeOffset = center ? tl.duration() * (container.offsetWidth / 2) / totalWidth : 0;
                    center &amp;&amp; times.forEach((t, i) =&gt; {
                    times[i] = timeWrap(tl.labels["label" + i] + tl.duration() * widths[i] / 2 / totalWidth -
                    timeOffset);
                    });
                    },
                    getClosest = (values, value, wrap) =&gt; {
                    let i = values.length,
                    closest = 1e10,
                    index = 0, d;
                    while (i--) {
                    d = Math.abs(values[i] - value);
                    if (d &gt; wrap / 2) {
                    d = wrap - d;
                    }
                    if (d &lt; closest) {
                    closest = d;
                    index = i;
                    }
                    }
                    return index;
                    },
                    populateTimeline = () =&gt; {
                    let i, item, curX, distanceToStart, distanceToLoop;
                    tl.clear();
                    for (i = 0; i &lt; length; i++) {
                    item = items[i];
                    curX = xPercents[i] / 100 * widths[i];
                    distanceToStart = item.offsetLeft + curX - startX + spaceBefore[0];
                    distanceToLoop = distanceToStart + widths[i] * gsap.getProperty(item, "scaleX");
                    tl.to(item, {xPercent: snap((curX - distanceToLoop) / widths[i] * 100), duration: distanceToLoop /
                    pixelsPerSecond}, 0)
                    .fromTo(item, {xPercent: snap((curX - distanceToLoop + totalWidth) / widths[i] * 100)}, {xPercent:
                    xPercents[i], duration: (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond,
                    immediateRender: false}, distanceToLoop / pixelsPerSecond)
                    .add("label" + i, distanceToStart / pixelsPerSecond);
                    times[i] = distanceToStart / pixelsPerSecond;
                    }
                    timeWrap = gsap.utils.wrap(0, tl.duration());
                    },
                    refresh = (deep) =&gt; {
                    let progress = tl.progress();
                    tl.progress(0, true);
                    populateWidths();
                    deep &amp;&amp; populateTimeline();
                    populateOffsets();
                    deep &amp;&amp; tl.draggable ? tl.time(times[curIndex], true) : tl.progress(progress, true);
                    },
                    proxy;
                    gsap.set(items, {x: 0});
                    populateWidths();
                    populateTimeline();
                    populateOffsets();
                    window.addEventListener("resize", () =&gt; refresh(true));
                    function toIndex(index, vars) {
                    vars = vars || {};
                    (Math.abs(index - curIndex) &gt; length / 2) &amp;&amp; (index += index &gt; curIndex ? -length :
                    length); // always go in the shortest direction
                    let newIndex = gsap.utils.wrap(0, length, index),
                    time = times[newIndex];
                    if (time &gt; tl.time() !== index &gt; curIndex &amp;&amp; index !== curIndex) { // if we're
                    wrapping the timeline's playhead, make the proper adjustments
                    time += tl.duration() * (index &gt; curIndex ? 1 : -1);
                    }
                    if (time &lt; 0 || time &gt; tl.duration()) {
                    vars.modifiers = {time: timeWrap};
                    }
                    curIndex = newIndex;
                    vars.overwrite = true;
                    gsap.killTweensOf(proxy);
                    return vars.duration === 0 ? tl.time(timeWrap(time)) : tl.tweenTo(time, vars);
                    }
                    tl.toIndex = (index, vars) =&gt; toIndex(index, vars);
                    tl.closestIndex = setCurrent =&gt; {
                    let index = getClosest(times, tl.time(), tl.duration());
                    if (setCurrent) {
                    curIndex = index;
                    indexIsDirty = false;
                    }
                    return index;
                    };
                    tl.current = () =&gt; indexIsDirty ? tl.closestIndex(true) : curIndex;
                    tl.next = vars =&gt; toIndex(tl.current()+1, vars);
                    tl.previous = vars =&gt; toIndex(tl.current()-1, vars);
                    tl.times = times;
                    tl.progress(1, true).progress(0, true); // pre-render for performance
                    if (config.reversed) {
                    tl.vars.onReverseComplete();
                    tl.reverse();
                    }
                    if (config.draggable &amp;&amp; typeof(Draggable) === "function") {
                    proxy = document.createElement("div")
                    let wrap = gsap.utils.wrap(0, 1),
                    ratio, startProgress, draggable, dragSnap, lastSnap, initChangeX,
                    align = () =&gt; tl.progress(wrap(startProgress + (draggable.startX - draggable.x) * ratio)),
                    syncIndex = () =&gt; tl.closestIndex(true);
                    typeof(InertiaPlugin) === "undefined" &amp;&amp; console.warn("InertiaPlugin required for
                    momentum-based scrolling and snapping. https://greensock.com/club");
                    draggable = Draggable.create(proxy, {
                    trigger: items[0].parentNode,
                    type: "x",
                    onPressInit() {
                    let x = this.x;
                    gsap.killTweensOf(tl);
                    startProgress = tl.progress();
                    refresh();
                    ratio = 1 / totalWidth;
                    initChangeX = (startProgress / -ratio) - x;
                    gsap.set(proxy, {x: startProgress / -ratio});
                    },
                    onDrag: align,
                    onThrowUpdate: align,
                    overshootTolerance: 0,
                    inertia: true,
                    snap(value) {
                    //note: if the user presses and releases in the middle of a throw, due to the sudden correction of
                    proxy.x in the onPressInit(), the velocity could be very large, throwing off the snap. So sense that
                    condition and adjust for it. We also need to set overshootTolerance to 0 to prevent the inertia from
                    causing it to shoot past and come back
                    if (Math.abs(startProgress / -ratio - this.x) &lt; 10) {
                    return lastSnap + initChangeX
                    }
                    let time = -(value * ratio) * tl.duration(),
                    wrappedTime = timeWrap(time),
                    snapTime = times[getClosest(times, wrappedTime, tl.duration())],
                    dif = snapTime - wrappedTime;
                    Math.abs(dif) &gt; tl.duration() / 2 &amp;&amp; (dif += dif &lt; 0 ? tl.duration() :
                    -tl.duration());
                    lastSnap = (time + dif) / tl.duration() / -ratio;
                    return lastSnap;
                    },
                    onRelease() {
                    syncIndex();
                    draggable.isThrowing &amp;&amp; (indexIsDirty = true);
                    },
                    onThrowComplete: syncIndex
                    })[0];
                    tl.draggable = draggable;
                    }
                    tl.closestIndex(true);
                    lastIndex = curIndex;
                    onChange &amp;&amp; onChange(items[curIndex], curIndex);
                    return tl;
                    }
                </script>
<script>
  gsap.registerPlugin(ScrollTrigger, Observer);

  // Only run script if screen width is greater than 768px (adjust as needed)
  if (window.innerWidth &gt; 768) {
    ScrollTrigger.defaults({
      scroller: document.documentElement
    });

    ScrollTrigger.config({
      limitCallbacks: true,
      ignoreMobileResize: false
    });

    let container = document.querySelector(".containers");

    let pageTrigger, maxScroll;

    gsap.to(container, {
      ease: "none",
      scrollTrigger: {
        trigger: container,
        pin: true,
        scrub: 1,
        invalidateOnRefresh: true,
        onUpdate: self =&gt; {
          container.scrollTo(
            Math.round((container.scrollWidth - container.clientWidth) * self.progress),
            0
          );
        },
        onRefresh: self =&gt; {
          pageTrigger = self;
          maxScroll = ScrollTrigger.maxScroll(container, true);
        },
        end: () =&gt; "+=" + (container.scrollWidth - window.innerWidth)
      }
    });

    Observer.create({
      target: container,
      type: "scroll",
      onChangeX: self =&gt; {
        let horizProgress = self.scrollX() / maxScroll;
        pageTrigger.scroll(
          Math.round(pageTrigger.start + (pageTrigger.end - pageTrigger.start) * horizProgress)
        );
      }
    });
  }
</script>

           </div>
        </xpath>
    </template>
</odoo>